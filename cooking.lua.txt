if workspace:FindFirstChild("PLADMIN LOADED SUCCESS") then
	warn("PrizzLife is already loaded")
	return
end

currentVersion = "0.9.9"

Execution_Runtime = tick() 
PLadmin_Settings = { 
	DefaultPrefix = "?"; 
	JoinNotify = false; 
	AutoRespawn = true; --Automatically loadcharacter when dying 
	AntiVoid = true; --Automatically teleport up when falling into void 
	AntiTase = false; --Prevents you from being tased (100% no getconnections used because its absolute garbage) 
	AntiArrest = false; --Prevents you from being arrested (100% no getconnections used because its absolute garbage) 
	AntiShoot = false; --Kills player who tries to shoot you (Will be delayed if you have shitty ping, *COUGH* PLDT Users) 
	AntiPunch = false; --Instantly kill players who try to punch you 
	AntiFling = false; --Prevent exploiters from flinging you 
	AntiShield = false; --stop pay2win people and bypass their shields 
	AntiBring = false; --Prevent other exploiter(s) from bringing you 
	SilentAim = false; --Makes you shoot without missing a target 
	AutoGuns = false; --Automatically get all guns 
	OldItemMethod = false; --Use teleport for getting items (USE THIS IF PRISON LIFE PATCHES THE TABLE METHOD) 
	Fullbright = false; --Enable fullbrightness 
	WhitelistRanked = false; --Automatically whitelist ranked players (DO NOT USE WHEN RANKING ALL PLAYERS) 
	RankedNukeCmds = true; --Allow ranked players to use nuke commands (Very annoying) 
	RankedMultiCmd = true; --Allow ranked players to use the arguments: "all, and team", EX: ?kill all 
	RankedOutput = true; --Chat the output commands of ranked players 
	WhisperToRanked = true; --Use whisper for outputing commands for ranked players 
};wait()

Instance.new("Folder", game:GetService("Workspace")).Name = "PLADMIN LOADED SUCCESS"

local PLAdmin = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ScriptName = Instance.new("TextLabel")
local ExecBar = Instance.new("TextBox")
local CloseButton = Instance.new("TextButton")
local MinimizeButton = Instance.new("TextButton")
local SettingButton = Instance.new("ImageButton")
local Toggles_Frame = Instance.new("ScrollingFrame")
local CMDS_Frame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local UIListLayout2 = Instance.new("UIListLayout")
local TopBar = Instance.new("Frame")
local UnloadScript = nil
local Unloaded = false

PLAdmin.Name = "PLAdmin"
PLAdmin.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
PLAdmin.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
PLAdmin.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = PLAdmin
MainFrame.BackgroundColor3 = Color3.fromRGB(45,45,45)
MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BorderSizePixel = 2
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.Size = UDim2.new(0, 295, 0, 400)
MainFrame.Active = true

TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.BackgroundColor3 = Color3.fromRGB(0,0,0)
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 2
TopBar.AnchorPoint = Vector2.new(0, 0)
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.Size = UDim2.new(1, 0, 0, 20)
TopBar.Active = true
TopBar.Visible = true

local TextLabel23 = Instance.new("TextLabel")
TextLabel23.Name = "CreditLabel"
TextLabel23.Parent = MainFrame
TextLabel23.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel23.BackgroundTransparency = 1
TextLabel23.Size = UDim2.new(0, 295, 0, 20)
TextLabel23.Position = UDim2.new(0, 0, 0, 20)
TextLabel23.Text = "In Loving Memory of elliexmln, thank you for everything! 馃晩锔�"
TextLabel23.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel23.TextSize = 12
TextLabel23.Font = Enum.Font.SourceSans
TextLabel23.TextXAlignment = Enum.TextXAlignment.Center
TextLabel23.TextYAlignment = Enum.TextYAlignment.Center
TextLabel23.ZIndex = 2

ScriptName.Name = "ScriptName"
ScriptName.Parent = TopBar
ScriptName.BackgroundTransparency = 1
ScriptName.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScriptName.BorderSizePixel = 0
ScriptName.Size = UDim2.new(0, 295, 0, 20)
ScriptName.Font = Enum.Font.SourceSans
ScriptName.Text = "PrizzLife " .. currentVersion
ScriptName.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptName.TextSize = 18.000
ScriptName.TextYAlignment = Enum.TextYAlignment.Top
ScriptName.TextWrapped = true

ExecBar.Name = "ExecBar"
ExecBar.Parent = MainFrame
ExecBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ExecBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
ExecBar.BorderSizePixel = 2
ExecBar.Position = UDim2.new(0, 0, 1, -27)
ExecBar.Size = UDim2.new(0, 295, 0, 27)
ExecBar.ZIndex = 2
ExecBar.Font = Enum.Font.SourceSans
ExecBar.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecBar.Text = ""
ExecBar.PlaceholderText = "> Search / Execute <"
ExecBar.TextSize = 15.000
ExecBar.ClearTextOnFocus = false

CloseButton.Name = "CloseButton"
CloseButton.Parent = TopBar
CloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CloseButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(0.930000126, 0, -0.00100000738, 0)
CloseButton.Size = UDim2.new(0, 20, 0, 19)
CloseButton.Font = Enum.Font.SourceSans
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14.000

MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = TopBar
MinimizeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(0.836440682, 0, -0.00100000738, 0)
MinimizeButton.Size = UDim2.new(0, 20, 0, 19)
MinimizeButton.Font = Enum.Font.SourceSans
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 14.000

SettingButton.Name = "SettingButton"
SettingButton.Parent = TopBar
SettingButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SettingButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
SettingButton.BorderSizePixel = 0
SettingButton.Position = UDim2.new(-0.00288127316, 0, -0.0064053922, 0)
SettingButton.Size = UDim2.new(0, 20, 0, 19)
SettingButton.Image = "rbxassetid://11308562716"

Toggles_Frame.Name = "Toggles_Frame"
Toggles_Frame.Parent = MainFrame
Toggles_Frame.Active = true
Toggles_Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Toggles_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggles_Frame.BorderSizePixel = 0
Toggles_Frame.Position = UDim2.new(0, 0, 0.105000056, 0)
Toggles_Frame.Size = UDim2.new(0, 295, 0, 350)
Toggles_Frame.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Toggles_Frame.ScrollBarThickness = 6
Toggles_Frame.ElasticBehavior = Enum.ElasticBehavior.Never
Toggles_Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y
Toggles_Frame.ScrollingDirection = Enum.ScrollingDirection.Y
Toggles_Frame.Visible = false

UIListLayout2.Parent = Toggles_Frame
UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout2.Padding = UDim.new(0.0088999978, 0)
UIListLayout2.VerticalAlignment = Enum.VerticalAlignment.Top

CMDS_Frame.Name = "CMDS_Frame"
CMDS_Frame.Parent = MainFrame
CMDS_Frame.Active = true
CMDS_Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CMDS_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
CMDS_Frame.BorderSizePixel = 0
CMDS_Frame.Position = UDim2.new(0, 0, 0.105000056, 0)
CMDS_Frame.Size = UDim2.new(0, 295, 0, 350)
CMDS_Frame.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
CMDS_Frame.ScrollBarThickness = 6
CMDS_Frame.ElasticBehavior = Enum.ElasticBehavior.Never
CMDS_Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y
CMDS_Frame.ScrollingDirection = Enum.ScrollingDirection.Y

UIListLayout.Parent = CMDS_Frame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0.0088999978, 0)
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top

--Gui functions
local DraggifyFrame = function(frame)
	local dragging; local dragStartPos; local startPos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true; dragStartPos = input.Position; startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end); game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStartPos
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

local AddList = function(args, description, isCategory)
	if isCategory then
		local background = Instance.new("Frame")
		background.Name = "Category_Frame_Background"
		background.Parent = CMDS_Frame
		background.Transparency = 1
		background.BorderSizePixel = 1
		background.BorderColor3 = Color3.fromRGB(0, 0, 0)
		background.Size = UDim2.new(0, 288, 0, 30)

		local newCategory = Instance.new("TextLabel")
		newCategory.Name = "Category_Frame"
		newCategory.Parent = background
		newCategory.Size = UDim2.new(0, 288, 0, 30)
		newCategory.BackgroundColor3 = Color3.fromRGB(12,12,12)

		newCategory.Font = Enum.Font.SourceSans
		newCategory.Text = args
		newCategory.TextColor3 = Color3.fromRGB(255, 255, 255)
		newCategory.TextScaled = true
		newCategory.TextSize = 14.000
		newCategory.TextWrapped = true

		local padding = Instance.new("UIPadding")
		padding.Parent = newCategory
		padding.PaddingTop = UDim.new(0, 5)
		padding.PaddingBottom = UDim.new(0, 5)
		padding.PaddingLeft = UDim.new(0, 5)
		padding.PaddingRight = UDim.new(0, 5)

		if typeof(description) == "string" then
			local newDescriptionCat = Instance.new("TextLabel")
			newDescriptionCat.Parent = CMDS_Frame
			newDescriptionCat.Name = "Description_Frame"
			newDescriptionCat.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
			newDescriptionCat.BorderColor3 = Color3.fromRGB(0, 0, 0)
			newDescriptionCat.BorderSizePixel = 0
			newDescriptionCat.BorderMode = Enum.BorderMode.Outline
			newDescriptionCat.Size = UDim2.new(0, 288, 0, 32)
			newDescriptionCat.Position = UDim2.new(0, 0, 0, 18)
			newDescriptionCat.Font = Enum.Font.SourceSans
			newDescriptionCat.Text = description
			newDescriptionCat.TextColor3 = Color3.fromRGB(255, 255, 255)
			newDescriptionCat.TextScaled = true
			newDescriptionCat.TextWrapped = true
			newDescriptionCat.TextSize = 14.000
		end
		return
	end

	local NewFrame = Instance.new("Frame")
	NewFrame.Name = "CMDFrame"
	NewFrame.Parent = CMDS_Frame
	NewFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	NewFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NewFrame.Size = UDim2.new(0, 288, 0, 18)

	local TextLabel = Instance.new("TextButton")
	TextLabel.Parent = NewFrame
	TextLabel.Name = "CMD_Name"
	TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 1
	TextLabel.ZIndex = 2
	TextLabel.Size = UDim2.new(0, 288, 0, 18)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.Text = args
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top

	local descriptionVisible = false
	local descriptionLabel = nil

	TextLabel.MouseButton1Click:Connect(function ()
		if descriptionVisible then
			if descriptionLabel then
				descriptionLabel:Destroy()
				descriptionLabel = nil
			end
			NewFrame.Size = UDim2.new(0, 288, 0, 18)
			descriptionVisible = false
		else
			descriptionLabel = Instance.new("TextLabel")
			descriptionLabel.Parent = NewFrame
			descriptionLabel.Name = "Description_Frame"
			Color3.fromRGB(36, 36, 36)
			descriptionLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
			descriptionLabel.BorderSizePixel = 0
			descriptionLabel.BackgroundColor3 = Color3.fromRGB(45,45,45)
			descriptionLabel.ZIndex = 1
			descriptionLabel.BorderMode = Enum.BorderMode.Outline
			descriptionLabel.Size = UDim2.new(0, 288, 0, 32)
			descriptionLabel.Position = UDim2.new(0, 0, 0, 18)
			descriptionLabel.Font = Enum.Font.SourceSans
			descriptionLabel.Text = description
			descriptionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			descriptionLabel.TextScaled = true
			descriptionLabel.TextWrapped = true
			descriptionLabel.TextSize = 14.000

			NewFrame.Size = UDim2.new(0, 288, 0, 50)
			descriptionVisible = true
		end
	end)
end

local NewToggleList = function(title, description, defaultvalue, toggle, istextbox)
	local NewFrame = Instance.new("Frame")
	NewFrame.Name = "TOGFrame"
	NewFrame.Parent = Toggles_Frame
	NewFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	NewFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NewFrame.Size = UDim2.new(0, 288, 0, 50)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = NewFrame
	TextLabel.Name = "TOG_Name"
	TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 1
	TextLabel.ZIndex = 2
	TextLabel.Size = UDim2.new(0, 288, 0, 18)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.Text = title
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	local TPos = TextLabel.Position
	local TextUdim = UDim2.new(TPos.X.Offset, TPos.X.Offset, TPos.Y.Scale + 0.37, TPos.Y.Offset)
	local NewDescription = istextbox and Instance.new("TextBox") or Instance.new("TextLabel")
	NewDescription.Parent = NewFrame
	NewDescription.Name = "Description_Frame"
	NewDescription.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	NewDescription.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NewDescription.BorderSizePixel = istextbox and 1 or 0
	NewDescription.ZIndex = 1
	NewDescription.BorderMode = istextbox and Enum.BorderMode.Inset or Enum.BorderMode.Outline
	NewDescription.Active = true
	NewDescription.Size = UDim2.new(0, 255, 0, 32)
	NewDescription.Font = Enum.Font.SourceSans
	NewDescription.Text = description
	NewDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
	NewDescription.TextScaled = true
	NewDescription.TextWrapped = true
	NewDescription.TextSize = 14.000
	NewDescription.Position = TextUdim
	local TOGButton = Instance.new("ImageButton")
	TOGButton.Name = "TOGButton"
	TOGButton.Parent = NewFrame
	TOGButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TOGButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TOGButton.BorderSizePixel = 0
	TOGButton.Position = UDim2.new(0.889166713, 0, 0.370000005, 0)
	TOGButton.Size = UDim2.new(0, 32, 0, 32)
	if defaultvalue == true then
		TOGButton.Image = "rbxassetid://375691700"
	elseif defaultvalue == false then
		TOGButton.Image = "rbxassetid://5100484851"
	elseif defaultvalue == "click" then
		TOGButton.Image = "rbxassetid://11255462876"
	end
	if istextbox then
		NewDescription.Text = ""; NewDescription.PlaceholderText = description
		TOGButton.MouseButton1Click:Connect(function()
			toggle(NewDescription.Text)
		end)
	else
		TOGButton.MouseButton1Click:Connect(function()
			local value = toggle()
			if value then
				TOGButton.Image = "rbxassetid://375691700"
			else
				TOGButton.Image = "rbxassetid://5100484851"
			end
		end)
	end
end
--GUI Connections
DraggifyFrame(MainFrame)


MinimizeButton.MouseButton1Click:Connect(function()
	if CMDS_Frame.Visible == false and not Toggles_Frame.Visible then
		CMDS_Frame.Visible = true
		SettingButton.Visible = true
		Toggles_Frame.Visible = false
		MainFrame.Size = UDim2.new(0, 295, 0, 400)
		ExecBar.Visible = true
		TopBar.Position = UDim2.new(0, 0, 0, 0)
		ExecBar.Position = UDim2.new(0, 0, 1, -27)
		ExecBar.PlaceholderText = "> Search / Execute <"
	else
		Toggles_Frame.Visible = false
		CMDS_Frame.Visible = false
		SettingButton.Visible = false

		MainFrame.Size = UDim2.new(0, 295, 0, 49)
		TopBar.Position = UDim2.new(0, 0, 0, 0)
		ExecBar.Position = UDim2.new(0, 0, 0, 22)
		ExecBar.Visible = true
		ExecBar.PlaceholderText = "> CommandBar <"
	end
end)

CloseButton.MouseButton1Click:Connect(function()
	MainFrame.Visible = false
	ExecBar.TextEditable = false

	local ClosedImageButton = Instance.new("ImageButton")
	ClosedImageButton.Name = "TextButton"
	ClosedImageButton.Parent = PLAdmin
	ClosedImageButton.AnchorPoint = Vector2.new(0.5, 0.5)
	ClosedImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ClosedImageButton.BackgroundTransparency = 1.000
	ClosedImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ClosedImageButton.BorderSizePixel = 0
	ClosedImageButton.Position = UDim2.new(0.499449551, 0, 0.128650904, 0)
	ClosedImageButton.Size = UDim2.new(0, 53, 0, 52)
	ClosedImageButton.Image = "rbxassetid://101782461395138"
	ClosedImageButton.ImageTransparency = 0.170

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(1, 1)
	UICorner.Parent = ClosedImageButton

	local con
	con = ClosedImageButton.MouseButton1Click:Connect(function()
		con:Disconnect()
		ClosedImageButton:Destroy()
		MainFrame.Visible = true
		ExecBar.TextEditable = true
	end)
end)

SettingButton.MouseButton1Click:Connect(function()
	if CMDS_Frame.Visible == true then
		CMDS_Frame.Visible = false;Toggles_Frame.Visible = true;ExecBar.PlaceholderText = "> Search Settings <"
	else
		Toggles_Frame.Visible = false;CMDS_Frame.Visible = true;ExecBar.PlaceholderText = "> Seach / Execute <"
	end
end)

ExecBar:GetPropertyChangedSignal("Text"):Connect(function()
	CMDS_Frame.CanvasPosition = Vector2.new(0, 0)
	local searchQuery = ExecBar.Text:lower()
	local filteredLabels, otherLabels = {}, {}

	for _, label in pairs(CMDS_Frame:GetChildren()) do
		if label:IsA("Frame") then
			local cmdName = label:FindFirstChild("CMD_Name")
			local categoryName = label:FindFirstChild("Category_Frame")

			if cmdName and cmdName.Text:lower():find(searchQuery) then
				table.insert(filteredLabels, label)
			elseif categoryName and categoryName.Text:lower():find(searchQuery) then
				table.insert(filteredLabels, label)
			else
				table.insert(otherLabels, label)
			end
		elseif label:IsA("TextLabel") or label:IsA("TextButton") then
			if label.Text:lower():find(searchQuery) then
				table.insert(filteredLabels, label)
			else
				table.insert(otherLabels, label)
			end
		end
	end

	for _, tog in pairs(Toggles_Frame:GetChildren()) do
		if tog:IsA("Frame") then
			local togName = tog:FindFirstChild("TOG_Name")
			if togName and togName.Text:lower():find(searchQuery) then
				table.insert(filteredLabels, tog)
			else
				table.insert(otherLabels, tog)
			end
		end
	end

	for i, label in ipairs(filteredLabels) do
		label.Visible = true
		label.LayoutOrder = i
	end
	for i, label in ipairs(otherLabels) do
		label.Visible = false
		label.LayoutOrder = #filteredLabels + i
	end
end)


--Variables
local Camera = game:GetService("Workspace").CurrentCamera
local Rstorage = game:GetService("ReplicatedStorage")
local Rservice = game:GetService("RunService")
local Hbeat = Rservice.Heartbeat
local Rstep = Rservice.RenderStepped
local Stepped = Rservice.Stepped
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")
local LocalPlayer = Players.LocalPlayer
local RegModule = nil

setClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
HttpService = cloneref(game:GetService("HttpService"))

local Prefix = "?"
--Tables
local Teleports = {
	nspawn = CFrame.new(879, 28, 2349);
	cells = CFrame.new(918.9735107421875, 99.98998260498047, 2451.423583984375);
	nexus = CFrame.new(877.929688, 99.9899826, 2373.57031, 0.989495575, 1.64841456e-08, 0.144563332, -3.13438235e-08, 1, 1.00512544e-07, -0.144563332, -1.0398788e-07, 0.989495575);
	armory = CFrame.new(836.130432, 99.9899826, 2284.55908, 0.999849498, 5.64007507e-08, -0.0173475463, -5.636889e-08, 1, 2.3254485e-09, 0.0173475463, -1.34723666e-09, 0.999849498);
	yard = CFrame.new(787.560425, 97.9999237, 2468.32056, -0.999741256, -7.32754017e-08, -0.0227459427, -7.49895506e-08, 1, 7.45077955e-08, 0.0227459427, 7.6194226e-08, -0.999741256);
	crimbase = CFrame.new(-864.760071, 94.4760284, 2085.87671, 0.999284029, 1.78674284e-08, 0.0378339142, -1.85715123e-08, 1, 1.82584365e-08, -0.0378339142, -1.89479969e-08, 0.999284029);
	cafe = CFrame.new(884.492798, 99.9899368, 2293.54907, -0.0628612712, -2.14097344e-08, -0.998022258, -9.52544568e-08, 1, -1.54524784e-08, 0.998022258, 9.40947018e-08, -0.0628612712);
	kitchen = CFrame.new(936.633118, 99.9899368, 2224.77148, -0.00265917974, -9.30829671e-08, 0.999996483, -3.28682326e-08, 1, 9.29958901e-08, -0.999996483, -3.26208252e-08, -0.00265917974);
	roof = CFrame.new(918.694092, 139.709427, 2266.60986, -0.998788536, -7.55880691e-08, -0.0492084064, -7.8453354e-08, 1, 5.62961198e-08, 0.0492084064, 6.00884817e-08, -0.998788536);
	vents = CFrame.new(933.55376574342, 121.534234671875, 2232.7952174975);
	office = CFrame.new(706.1928465, 103.14982749, 2344.3957382525);
	ytower = CFrame.new(786.731873, 125.039917, 2587.79834, -0.0578307845, 8.82393678e-08, 0.998326421, 6.09781523e-08, 1, -8.48549675e-08, -0.998326421, 5.59688687e-08, -0.0578307845);
	gtower = CFrame.new(505.551605, 125.039917, 2127.41138, -0.99910152, 5.44945458e-08, 0.0423811078, 5.36830491e-08, 1, -2.02856469e-08, -0.0423811078, -1.79922726e-08, -0.99910152);
	garage = CFrame.new(618.705566, 98.039917, 2469.14136, 0.997341573, 1.85835844e-08, -0.0728682056, -1.79448154e-08, 1, 9.42077172e-09, 0.0728682056, -8.0881204e-09, 0.997341573);
	sewers = CFrame.new(917.123657, 78.6990509, 2297.05298, -0.999281704, -9.98203404e-08, -0.0378962979, -1.01324503e-07, 1, 3.77708638e-08, 0.0378962979, 4.15835579e-08, -0.999281704);
	neighborhood = CFrame.new(-281.254669, 54.1751289, 2484.75513, 0.0408788249, 3.26279768e-08, 0.999164104, -3.88249717e-08, 1, -3.10668256e-08, -0.999164104, -3.75225433e-08, 0.0408788249);
	gas = CFrame.new(-497.284821, 54.3937759, 1686.3175, 0.585129559, -4.33374865e-08, -0.810939848, 5.33533938e-13, 1, -5.34406759e-08, 0.810939848, 3.12692876e-08, 0.585129559);
	deadend = CFrame.new(-979.852478, 54.1750259, 1382.78967, 0.0152699631, 8.88235174e-09, 0.999883413, 6.75286884e-08, 1, -9.9146682e-09, -0.999883413, 6.76722109e-08, 0.0152699631);
	store = CFrame.new(455.089508, 11.4253607, 1222.89746, 0.99995482, -3.92535604e-09, 0.00950394664, 2.84450263e-09, 1, 1.1374032e-07, -0.00950394664, -1.13708147e-07, 0.99995482);
	roadend = CFrame.new(1060.81995, 67.5668106, 1847.08923, 0.0752086118, -1.01192255e-08, -0.997167826, 4.30985886e-10, 1, -1.01154605e-08, 0.997167826, 3.31004502e-10, 0.0752086118);
	trapbuilding = CFrame.new(-306.715485, 84.2401199, 1984.13367, -0.802221119, 5.70582088e-08, -0.597027004, 4.81801123e-08, 1, 3.08312771e-08, 0.597027004, -4.0313255e-09, -0.802221119);
	mansion = CFrame.new(-315.790436, 64.5724411, 1840.83521, 0.80697298, -4.47871713e-08, 0.590588331, 1.14004006e-08, 1, 6.02574701e-08, -0.590588331, -4.18932053e-08, 0.80697298);
	trapbase = CFrame.new(-943.973145, 94.1287613, 1919.73694, 0.025614135, -1.48015129e-08, 0.999671876, 1.00375175e-07, 1, 1.22345032e-08, -0.999671876, 1.00028863e-07, 0.025614135);
	buildingroof = CFrame.new(-317.689331, 118.838821, 2009.28186, 0.749499857, 2.48145682e-09, 0.662004471, 3.51757373e-10, 1, -4.14664703e-09, -0.662004471, 3.34077632e-09, 0.749499857);
};
local Saved = {
	WalkSpeed = nil;
	RunSpeed = 25;
	NormalSpeed = 16;
	JumpPower = nil;
	NormalJump = 50;
	SpinToolRadius = 8;
	SpinToolSpeed = 10;
	KillDebounce = {};
	MKillDebounce = {};
	Cars = {};
	PCEvents = {};
	Thread = {};
};
local Toggles = {
	ok = false;
	AutoRespawn = true;
	AutoFire = false;
	AutoFireRate = false;
	AutoGuns = false;
	AutoItems = false;
	AutoInfiniteAmmo = false;
	AutoGunMods = false;
	AntiBring = false;
	AntiTase = false;
	AntiArrest = false;
	AntiPunch = false;
	AntiStun = false;
	Antishoot = false;
	AntiShield = false;
	ArrestBack = false;
	PunchAura = false;
	SpamPunch = false;
	Onepunch = false;
	Oneshot = false;
	Headshot = false;
	Silentaim = false;
	Noclip = false;
	FriendlyFire = false;
	MeleeAura = false;
	ArrestAura = false;
	MeleeTouch = false;
	TKA = {
		Guard = false;
		Inmate = false;
		Criminal = false;
		Enemies = false;
	};
	ESP = false;
};
local States = {
	ok = false;
	Running = false;
	AntiVoid = true;
	AntiFling = false;
	AntiVelocity = false;
	Invisible = false;
	Speeding = false;
	JumpPower = false;
	IsBringing = false;
	ReplicateEvent = true;
	SpinnyTools = false;
	ForceField = false;
	LoudPunch = false;
	ClickTeleport = false;
	ClickKill = false;
	ClickArrest = false;
	ClickTase = false;
	ClickFling = false;
	ClickGoto = false;
	ClickBring = false;
};
local Loops = {
	KillTeams = {
		All = false;
		Guards = false;
		Inmates = false;
		Criminals = false;
		Neutrals = false;
		Hostiles = false;
	};
	MeleeTeams = {
		All = false;
		Guards = false;
		Inmates = false;
		Criminals = false;
		Neutrals = false;
	};
	ArrestTeams = {
		Inmate = false;
		Guard = false;
		Criminal = false;
	};
	AutoArresting = {
		Plr = {};
		All = false;
	};
	TaseTeams = {
		All = false;
		Inmates = false;
		Criminals = false;
	};
	Kill = {};
	MeleeKill = {};
	RandomKill = {};
	ShootKill = {};
	PunchKill = {};
	VoidKill = {};
	Voided = {};
	Trapped = {};
	Tase = {};
	Arrest = {};
	MakeCrim = {};
	Fling = {};
	CarFling = {};
};
local Powers = {
	Killauras = {};
	Taseauras = {};
	Antitouch = {};
	Antipunch = {};
	Antishoot = {};
	Antiarrest = {};
	Onepunch = {};
	Punchaura = {};
	Oneshot = {};
	FriendlyFire = {};
	DeathNuke = {};
};
local Settings = {
	KillauraThreshold = 17;
	JoinNotify = false;
	PrintDebug = string.sub(LocalPlayer.Name, 1, 5) == "TheDestroyer" or string.sub(LocalPlayer.Name, 1, 9) == "devang099";
	User = {
		RankedCmds = true;
		HiddenMelee = false;
		HiddenArrest = false;
		AutoDumpCar = false;
		OldItemMethod = false;
	};
	Ranked = {
		AutoWhitelist = false;
		WhisperMode = true;
		Output = true;
		KillCmds = true;
		LoopCmds = true;
		MultiCmd = true;
		Tase = true;
		Arrest = true;
		Fling = true;
		Killaura = true;
		Nuke = true;
		Teleport = true;
		BringGoto = true;
		TrapVoid = true;
		CarSpawn = true;
		Opendoors = true;
		AllowPowers = true;
		CrashCmds = false;
		GiveCmds = false;
		GiveOthersPowers = true;
	};
};
local RankedPlrs = {};
local Whitelisted = {};
local Connections = {};
local ChatCon = {};
local SavedPositions = {};
local SavedArgs = {};
local CmdQueue = {};
local LocPL = {
	Gamepass = nil;
	UIN = LocalPlayer.Name;
	UID = LocalPlayer.UserId;
	ShittyExecutor = nil;
	isTouch = game:GetService("UserInputService").TouchEnabled;
	isMouse = game:GetService("UserInputService").MouseEnabled;
};
local Threads, Tasks = nil, nil

--Functions
local deprint = function(args)
	if Settings.PrintDebug then
		print(args)
	end
end

local dewarn = function(args)
	if Settings.PrintDebug then
		warn(args)
	end
end

local waitfor = function(source, args, interval)
	local int = interval or 5
	local timeout = tick() + int
	repeat Stepped:Wait() until source:FindFirstChild(args) or tick() - timeout >=0
	timeout = nil
	if source:FindFirstChild(args) then
		return source:FindFirstChild(args)
	else
		return nil
	end
end

local SaveCamPos = function()
	SavedPositions.OldCameraPos = Camera.CFrame
end

local LoadCamPos = function()
	Rstep:Wait()
	Camera.CFrame = SavedPositions.OldCameraPos or Camera.CFrame
end

local LocTP = function(cframe)
	LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = cframe
end
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer

local Frame23 = Instance.new("Frame")
Frame23.Parent = PLAdmin
Frame23.Transparency = 1
Frame23.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame23.BorderSizePixel = 0
Frame23.Position = UDim2.new(0.625, 0, 0.037580274, 0)
Frame23.Size = UDim2.new(0.360824734, 0, 0.882352889, 0)

local layout = Instance.new("UIListLayout")
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 10)
layout.VerticalAlignment = Enum.VerticalAlignment.Bottom
layout.Parent = Frame23


local function Notif(args, text, duration)
	duration = duration or 3

	local notif = Instance.new("Frame")
	notif.Name = "notifFrame"
	notif.Size = UDim2.new(0, 320, 0, 72)
	notif.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	notif.BorderSizePixel = 0
	notif.BackgroundTransparency = 0
	notif.Parent = Frame23
	notif.LayoutOrder = tick()

	local image = Instance.new("ImageLabel")
	image.Size = UDim2.new(0, 72, 0, 72)
	image.Position = UDim2.new(0, 0, 0, 0)
	image.BackgroundTransparency = 1
	image.Image = "rbxassetid://71672543266605"
	image.Parent = notif

	local title = Instance.new("TextLabel")
	title.RichText = true
	title.Name = "title"
	title.Parent = notif
	title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	title.BackgroundTransparency = 1.000
	title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	title.BorderSizePixel = 0
	title.Position = UDim2.new(0.25, 0, 0, 0)
	title.Size = UDim2.new(0, 192, 0, 35)
	title.Font = Enum.Font.SourceSans
	title.Text = "<b>" .. args .. "</b>"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.TextScaled = true
	title.TextSize = 14.000
	title.TextWrapped = true
	title.TextXAlignment = Enum.TextXAlignment.Left

	local desc = Instance.new("TextLabel")

	desc.Name = "desc"
	desc.Parent = notif
	desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	desc.BackgroundTransparency = 1.000
	desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	desc.BorderSizePixel = 0
	desc.Position = UDim2.new(0.25, 0, 0.486111104, 0)
	desc.Size = UDim2.new(0, 192, 0, 37)
	desc.Font = Enum.Font.SourceSans
	desc.Text = text
	desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	desc.TextScaled = true
	desc.TextSize = 14.000
	desc.TextWrapped = true
	desc.TextXAlignment = Enum.TextXAlignment.Left

	local divider = Instance.new("Frame")
	divider.Size = UDim2.new(0, 233, 0, 1)
	divider.Position = UDim2.new(0.25, 0, 0.486, 0)
	divider.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
	divider.BorderSizePixel = 0
	divider.Parent = notif

	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	UIAspectRatioConstraint.Parent = Frame23
	UIAspectRatioConstraint.AspectRatio = 0.636

	task.delay(duration, function()
		if notif and notif.Parent then
			local fadeOut = TweenService:Create(notif, TweenInfo.new(0.3), {
				BackgroundTransparency = 1
			})
			fadeOut:Play()
			fadeOut.Completed:Connect(function()
				notif:Destroy()
			end)
		end
	end)
end

local PromptUser = function(Title, Text, Duration, Button1, Button2, DaCallback, DeCallback, waitresponse)
	local Bindable, Responded = Instance.new("BindableFunction"), false
	function Bindable.OnInvoke(response)
		if response == Button1 then
			if DaCallback then
				DaCallback()
			end
		elseif response == Button2 then
			if DeCallback then
				DeCallback()
			end
		end
		Responded = true
	end;game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = Title;
		Text = Text;
		Duration = Duration;
		Callback = Bindable;
		Button1 = Button1;
		Button2 = Button2;
	})
	if waitresponse then
		local tictowait = tick() + Duration + 1
		repeat task.wait() until tick() - tictowait >=0 or Responded;tictowait = nil
		Bindable:Destroy();Bindable = nil;Responded = nil
	else
		task.spawn(function()
			local tictowait = tick() + Duration + 1
			repeat task.wait() until tick() - tictowait >=0 or Responded;tictowait = nil
			Bindable:Destroy();Bindable = nil;Responded = nil
		end)
	end
end

local SysMessage = function(datext, dacolor)
	local TCS = game:GetService("TextChatService")
	local channels = TCS:WaitForChild("TextChannels")
	local system = channels:FindFirstChild("RBXSystem")
	system:SendAsync(datext)
end

local Chat = loadstring(game:HttpGet("https://gist.githubusercontent.com/devguy100/6a49aa32164143be3ac90f2d705c4583/raw/2f0016ea1d122ae4a3816a48775bead9d90188ee/gistfile1.txt"))()

local VKeyPress = function(args, args2, waits)
	if args2 == "Press" then
		game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
		task.wait(.1)
		game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
	elseif args2 == "Hold" then
		game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
	elseif args2 == "UnHold" then
		game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
	elseif args2 == "HoldWait" and waits then
		game:GetService("VirtualInputManager"):SendKeyEvent(true, args, false, game)
		wait(waits)
		game:GetService("VirtualInputManager"):SendKeyEvent(false, args, false, game)
	end
end

local LAction = function(args, args2)
	if args == "sit" then
		LocalPlayer.Character:FindFirstChild("Humanoid").Sit = true
	elseif args == "unsit" then
		if args2 then
			local human = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			for i = 1, 8 do Hbeat:Wait();human.Sit=false;Rstep:Wait();human.Sit=false;Stepped:Wait();human.Sit=false end
		end;LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Running)
	elseif args == "speed" then
		LocalPlayer.Character:FindFirstChild("Humanoid").WalkSpeed = args2
	elseif args == "jumppw" then
		LocalPlayer.Character:FindFirstChild("Humanoid").JumpPower = args2
	elseif args == "die" then
		LocalPlayer.Character:FindFirstChild("Humanoid").Health = 0
	elseif args == "died" then
		LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
	elseif args == "jump" then
		LocalPlayer.Character:FindFirstChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
	elseif args == "state" then
		LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(args2)
	elseif args == "equip" then
		LocalPlayer.Character:FindFirstChild("Humanoid"):EquipTool(args2)
	elseif args == "unequip" then
		LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
	end
end
--Command functions
local PlrFromArgs = function(plr, args)
	if plr and plr:lower() == "me" then
		return args
	elseif not plr and not args then
		return false
	elseif not plr and args then
		return args
	end
	local foundplr = false
	for i,v in pairs(Players:GetPlayers()) do
		local Name, DisplayName = v.Name:lower(), v.DisplayName:lower()
		if Name:sub(1, #plr) == plr:lower() or DisplayName:sub(1, #plr) == plr:lower() then
			foundplr = v
		end
	end
	return foundplr
end

local GetRandomPlr = function(args)
	local DaPlayers = Players:GetPlayers()
	local DaIndex = math.random(1, #DaPlayers)
	local ToReturn = DaPlayers[DaIndex]
	if args and ToReturn.UserId == args.UserId then
		DaPlayers = Players:GetPlayers(); DaIndex = math.random(1, #DaPlayers); ToReturn = DaPlayers[DaIndex]
	end
	return ToReturn
end
--i made it into a whole useless function just to save my hands
local CheckWhitelist = function(args)
	return not (Whitelisted[args.UserId] or Settings.Ranked.AutoWhitelist and RankedPlrs[args.UserId])
end

local MeleEve = function(args)
	Rstorage.meleeEvent:FireServer(args)
end

local TeamEve = function(args)
	workspace.Remote.TeamEvent:FireServer(args)
end

local ArrestEve = function(args, repeated, interval)
	if repeated then
		for i = 1, repeated do
			if interval then task.wait(interval) end
			task.spawn(function()
				if args.Character:FindFirstChild("Humanoid") and args.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
					workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
				end
			end)
		end
	else
		workspace.Remote.arrest:InvokeServer(args.Character:FindFirstChildWhichIsA("Part"))
	end
end

local RTPing = function(value)
	if value then
		task.wait(value)
	end
	local RT1 = tick()
	pcall(function()
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"])
	end)
	local RT2 = tick()
	local RoundTrip = (RT2-RT1) * 1000
	return RoundTrip
end

local CPing = function(ConvertToHuman, OneWayTrip)
	if ConvertToHuman then
		return OneWayTrip and LocalPlayer:GetNetworkPing() * 1000 or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
	else
		return OneWayTrip and LocalPlayer:GetNetworkPing() or game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000
	end
end

local TeamTo = function(args)
	local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; SavedPositions.AutoRe = tempos; SaveCamPos()
	if args == "criminal" then
		if LocalPlayer.TeamColor.Name == "Medium stone grey" then
			TeamEve("Bright orange")
		end
		workspace["Criminals Spawn"].SpawnLocation.CanCollide = false
		repeat
			pcall(function()
				workspace["Criminals Spawn"].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			end)
			Stepped:Wait()
		until LocalPlayer.TeamColor == BrickColor.new("Really red")
		workspace['Criminals Spawn'].SpawnLocation.CFrame = SavedPositions.Crimpad
		return
	elseif args == "inmate" then
		TeamEve("Bright orange")
	elseif args == "guard" then
		TeamEve("Bright blue")
		if #Teams.Guards:GetPlayers() > 7 then
			return
		end
	end
	LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart", 5).CFrame = tempos; LoadCamPos()
end

local ItemGrab = function(source, args)
	local lroot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart"); local timeout = tick() + 5
	if lroot then SavedPositions.GetGunOldPos = not SavedPositions.GetGunOldPos and lroot.CFrame or SavedPositions.GetGunOldPos; end
	local DaItem = source:FindFirstChild(args); local ItemPickup = DaItem.ITEMPICKUP; local IPickup = ItemPickup.Position
	if lroot then LocTP(CFrame.new(IPickup)); end; repeat task.wait()
		pcall(function()
			LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false; LocTP(CFrame.new(IPickup))
		end); task.spawn(function()
			game:GetService("Workspace").Remote.ItemHandler:InvokeServer(ItemPickup)
		end)
	until LocalPlayer.Backpack:FindFirstChild(args) or LocalPlayer.Character:FindFirstChild(args) or tick() - timeout >=0
	pcall(function() LocTP(SavedPositions.GetGunOldPos); end); SavedPositions.GetGunOldPos = nil
end

local ItemHand = function(source, args)
	if source and source == "old" then
		game:GetService("Workspace").Remote.ItemHandler:InvokeServer(args)
		return
	end; if Settings.User.OldItemMethod then
		if source then
			ItemGrab(source, args)
		else
			for _,sources in pairs(workspace.Prison_ITEMS:GetChildren()) do
				if sources:FindFirstChild(args) then
					ItemGrab(source, args)
					break
				end
			end
		end
		return
	end; if source then
		workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = source:FindFirstChild(args)})
	else
		workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = workspace.Prison_ITEMS.giver:FindFirstChild(args) or workspace.Prison_ITEMS.single:FindFirstChild(args)})
	end
end

local Gun = function(args) 
	if Settings.User.OldItemMethod then
		ItemHand(workspace["Prison_ITEMS"].giver, args)
		return
	end; workspace.Remote.ItemHandler:InvokeServer({Position = LocalPlayer.Character.Head.Position, Parent = workspace.Prison_ITEMS.giver:FindFirstChild(args) or workspace.Prison_ITEMS.single:FindFirstChild(args)})
end

local AllGuns = function()
	if Settings.User.OldItemMethod then
		Gun("AK-47")
		Gun("Remington 870")
	else
		task.spawn(Gun, "AK-47")
		task.spawn(Gun, "Remington 870")
	end
	Gun("M9")
	if LocPL.Gamepass then
		Gun("M4A1")
	end; task.wait()
end

local SpawnClientStuff = function(arg)
	if arg == "superknife" then
		ItemHand(false, "Crude Knife")
		local knife = LocalPlayer.Backpack:FindFirstChild("Crude Knife") or LocalPlayer.Character:FindFirstChild("Crude Knife")
		local animate = Instance.new("Animation", knife)
		animate.AnimationId = "rbxassetid://218504594"
		local animtrack = LocalPlayer.Character:FindFirstChild("Humanoid"):LoadAnimation(animate)
		local attacking = false
		local inPutCon = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Crude Knife") then
					if not attacking then
						attacking = true
						animtrack:Play()
						for i,v in pairs(Players:GetPlayers()) do
							if not (v == LocalPlayer) then
								if v.Character and v.Character:FindFirstChild("Humanoid") then
									if not (v.Character:FindFirstChild("Humanoid").Health == 0) then
										local LPart, VPart = LocalPlayer.Character.PrimaryPart, v.Character.PrimaryPart
										if LPart and VPart then
											if (LPart.Position-VPart.Position).Magnitude <= 5 then
												for i = 1, 15 do
													MeleEve(v)
												end
											end
										end
									end
								end
							end
						end
						task.wait(.1)
						attacking = false
					end
				end
			end
		end)
		task.spawn(function()
			LocalPlayer.CharacterAdded:Wait()
			inPutCon:Disconnect(); animate:Destroy()
			animate = nil; animtrack = nil; inPutCon = nil
		end)
	elseif arg == "bat" then
		local tool = Instance.new("Tool", LocalPlayer.Backpack)
		tool.GripPos = Vector3.new(0.1, -1, 0)
		tool.Name = "Bat"
		local handle = Instance.new("Part", tool)
		handle.Name = "Handle"
		handle.Size = Vector3.new(0.4, 4, 0.4)
		local animate = Instance.new("Animation", tool)
		animate.AnimationId = "rbxassetid://218504594"
		local animtrack = LocalPlayer.Character.Humanoid:LoadAnimation(animate)
		local attacking = false
		local activate = tool.Activated:Connect(function()
			if not attacking then
				attacking = true
				animtrack:Play()
				task.wait(.1)
				attacking = false
			end
		end)
		local Touched = handle.Touched:Connect(function(part)
			if attacking then
				local human = part.Parent:FindFirstChild("Humanoid")
				if human then
					local plr = Players:FindFirstChild(part.Parent.Name)
					if plr then
						for i = 1, 10 do
							MeleEve(plr)
						end
					end
				end
			end
		end)
		task.spawn(function()
			LocalPlayer.CharacterAdded:Wait()
			activate:Disconnect(); Touched:Disconnect()
			handle:Destroy(); tool:Destroy(); animate:Destroy()
			animtrack = nil; animate = nil; attacking = nil
		end)
	elseif arg == "clicktp" then
		local newTool = Instance.new("Tool")
		newTool.RequiresHandle = false
		newTool.Name = "Click-TP"
		newTool.Parent = LocalPlayer.Backpack
		local tempocon = nil
		tempocon = newTool.Activated:Connect(function()
			local Get = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			local Wi = LocalPlayer:GetMouse().Hit
			local Fi = Wi.Position + Vector3.new(0, 2.5, 0)
			local Anywhere = Fi-Get.Position
			local YouGo = Get.CFrame + Anywhere
			Get.CFrame = YouGo
		end)
		task.spawn(function()
			LocalPlayer.CharacterAdded:Wait()
			newTool:Destroy(); tempocon:Disconnect()
			newTool = nil; tempocon = nil;
		end)
	elseif arg == "btools" then
		local hammer = Instance.new("HopperBin", LocalPlayer.Backpack)
		local gametool = Instance.new("HopperBin", LocalPlayer.Backpack)
		local scriptt = Instance.new("HopperBin", LocalPlayer.Backpack)
		local grab = Instance.new("HopperBin", LocalPlayer.Backpack)
		local clonee = Instance.new("HopperBin", LocalPlayer.Backpack)
		hammer.BinType = "Hammer"
		gametool.BinType = "GameTool"
		scriptt.BinType = "Script"
		grab.BinType = "Grab"
		clonee.BinType = "Clone"
	end
end

local AllItems = function()
	AllGuns()
	if not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
		ItemHand(false, "Crude Knife");ItemHand(false, "Hammer")
	elseif LocPL.Gamepass then
		if LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
			ItemHand(false, "Riot Shield");ItemHand(workspace.Prison_ITEMS.clothes, "Riot Police")
		end;ItemHand(workspace.Prison_ITEMS.hats, "Riot helmet");ItemHand(workspace.Prison_ITEMS.hats, "Ski mask")
	end
	local Food = workspace.Prison_ITEMS.giver:FindFirstChild("Dinner") or workspace.Prison_ITEMS.giver:FindFirstChild("Breakfast") or workspace.Prison_ITEMS.giver:FindFirstChild("Lunch")
	if Food then
		ItemHand(false, Food.Name)
	end;if workspace.Prison_ITEMS.single:FindFirstChild("Key card") then
		ItemHand(workspace.Prison_ITEMS.single, "Key card")
	end
	SpawnClientStuff("bat");SpawnClientStuff("btools")
end

local GetIllegalReg = function(args)
	local RegPlr = nil
	if args.Character and RegModule then
		for i,v in pairs(Rstorage:FindFirstChild("PermittedRegions"):GetChildren()) do
			if RegModule.findRegion(args.Character) then
				RegPlr = RegModule.findRegion(args.Character)["Name"]
			end
			if v.Value == RegPlr then
				return false
			end
		end
		return true
	else return true end
end
--ClientInputHandler my ass
local VirtualPunch = function(args)
	task.delay(0, function()
		if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) then
			return
		end;for _, animationTrack in ipairs(LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks()) do
			if animationTrack.Animation.AnimationId == "rbxassetid://484200742" or animationTrack.Animation.AnimationId == "rbxassetid://484926359" then
				animationTrack:Stop(); animationTrack:Destroy()
			end
		end
		local Sapakan = math.random(1, 2);local animtoload = nil;local newAnim = Instance.new("Animation")
		if Sapakan == 1 then
			newAnim.AnimationId="rbxassetid://484200742";animtoload=LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):LoadAnimation(newAnim)
		else
			newAnim.AnimationId="rbxassetid://484926359";animtoload=LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChildOfClass("Animator"):LoadAnimation(newAnim)
		end;animtoload.Looped=false;animtoload:Play(); task.wait(animtoload.Length); newAnim:Destroy();animtoload:Stop();animtoload:Destroy();newAnim=nil;animtoload=nil;Sapakan=nil
	end)
	local LHead = LocalPlayer.Character:FindFirstChild("Head")
	local magnit = Toggles.PunchAura and 20 or 2.5
	if not args then
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= LocalPlayer then
				local VChar = v.Character
				local VHead = VChar:FindFirstChild("Head")
				if VHead and LHead then
					if (LHead.Position-VHead.Position).Magnitude <= magnit then
						local sound = VHead.punchSound; sound.Volume = 1; sound:Play()
						if Toggles.Onepunch then
							for i = 1, 15 do
								MeleEve(v)
							end
						else
							MeleEve(v)
						end; game:GetService("ReplicatedStorage").SoundEvent:FireServer(sound)
						if not Toggles.PunchAura then
							break
						end
					end
				end
			end
		end
	elseif args then
		local AChar = args.Character
		local AHead = AChar:FindFirstChild("Head")
		if (LHead.Position-AHead.Position).Magnitude <= magnit then
			local sound = AHead.punchSound; sound.Volume = 1; sound:Play()
			if Toggles.Onepunch then
				for i = 1, 15 do
					MeleEve(args)
				end
			else
				MeleEve(args)
			end; game:GetService("ReplicatedStorage").SoundEvent:FireServer(sound)
		end
	end
	if States.LoudPunch then
		for i,v in pairs(Players:GetPlayers()) do
			if v and v.Character and v.Character:FindFirstChild("Head") then
				local head = v.Character:FindFirstChild("Head")
				local vol = head.punchSound
				if v == LocalPlayer then
					vol:Play()
				end; Rstorage.SoundEvent:FireServer(vol)
			end
		end
	end
end
--executor functions suck anyways, rely on physics engine instead
local OpenDoors = function(includeGate)
	local oldteam = nil
	if #Teams.Guards:GetPlayers() >= 8 and not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
		Notif("Error", "Guards team full.")
		return
	elseif not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
		oldteam = LocalPlayer.TeamColor; SaveCamPos(); TeamTo("guard"); waitfor(LocalPlayer.Character, "HumanoidRootPart", 3)
	end; if includeGate then
		local laspos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
		local gate = game:GetService("Workspace")["Prison_ITEMS"].buttons["Prison Gate"]["Prison Gate"]
		for i = 1, 4 do
			LocTP(gate:GetPivot())
			workspace.Remote.ItemHandler:InvokeServer(gate)
		end; LocTP(laspos)
	end; local hascollision = {}
	for i,v in pairs(workspace.Doors:GetChildren()) do
		if v:IsA("Model") then
			local pivot = v:GetPivot(); v:PivotTo(LocalPlayer.Character:GetPivot())
			for _,vv in pairs(v:GetDescendants()) do
				if vv:IsA("BasePart") and vv.CanCollide then
					hascollision[vv] = true; vv.CanCollide = false
				end
			end; task.delay(0, function()
				v:PivotTo(pivot)
				for _,vv in pairs(v:GetDescendants()) do
					if vv:IsA("BasePart") and hascollision[vv] then
						vv.CanCollide = true
					end
				end
			end)
		end
	end; RTPing(0.03)
	if oldteam then
		wait(2); SaveCamPos()
		if oldteam == BrickColor.new("Really red") then
			TeamTo("criminal")
		elseif oldteam == BrickColor.new("Bright orange") then
			TeamTo("inmate")
		end
	end
end
--I'm so int-chaos-gent omfg no way my fly is compatible for both pc and mobile users
local Flight = function(args)
	local CModule = not LocPL.ShittyExecutor and require(LocalPlayer.PlayerScripts:FindFirstChild("PlayerModule"):FindFirstChild("ControlModule")) or game:GetService("UserInputService")
	local speed,Charadd,ExitButton = args or 5,nil,nil
	local Camera,Char = game.Workspace.CurrentCamera,game.Players.LocalPlayer.Character
	local Human,Root = Char:WaitForChild("Humanoid"),Char:WaitForChild("HumanoidRootPart")
	local BodyG,BodyV = Instance.new("BodyGyro", Root),Instance.new("BodyVelocity", Root)
	BodyG.MaxTorque=Vector3.new();BodyG.D=30;BodyG.P=1000;BodyG.MaxTorque=Vector3.new(400000,400000,400000);BodyV.MaxForce=Vector3.new(9e9, 9e9, 9e9)
	task.spawn(function()
		ExitButton=Instance.new("TextButton");ExitButton.Name="ExitButton";ExitButton.Parent=PLAdmin;ExitButton.AnchorPoint=Vector2.new(0.5, 0.5)
		ExitButton.BackgroundColor3=Color3.fromRGB(255, 255, 255);ExitButton.BorderColor3=Color3.fromRGB(0, 0, 0);ExitButton.BorderSizePixel = 0;ExitButton.Position=UDim2.new(0.5, 0, 0.900000012, 0)
		ExitButton.Size=UDim2.new(0, 150, 0, 30);ExitButton.Font=Enum.Font.SourceSans;ExitButton.Text="Exit Vehicle";ExitButton.TextColor3=Color3.fromRGB(0, 0, 0);ExitButton.TextSize=20.000;ExitButton.Visible=false
		ExitButton.MouseButton1Click:Connect(function()
			for i = 1, 10 do
				LAction("jump");task.wait()
			end;ExitButton.Visible = false
		end)
		while task.wait() and States.Flying do
			pcall(function()
				local velocity = Vector3.new(0, 0, 0)
				local direct = not LocPL.ShittyExecutor and CModule:GetMoveVector() or {
					X = CModule:IsKeyDown(Enum.KeyCode.A) and -1.8 or CModule:IsKeyDown(Enum.KeyCode.D) and 1.8 or 0,
					Z = CModule:IsKeyDown(Enum.KeyCode.W) and -1.8 or CModule:IsKeyDown(Enum.KeyCode.S) and 1.8 or 0
				};if direct.X ~= 0 then
					velocity = velocity + Camera.CFrame.RightVector * direct.X
				end;if direct.Z ~= 0 then
					velocity = velocity - Camera.CFrame.LookVector * direct.Z
				end;if not Human.Sit then
					Human:ChangeState(Enum.HumanoidStateType.Physics); ExitButton.Visible = false
				else ExitButton.Visible = true; end
				BodyV.Velocity = velocity * speed * 10; BodyG.CFrame = Camera.CoordinateFrame
				Root.RotVelocity = Vector3.new(0, 0, 0); Root.Velocity = Vector3.new(0, 0, 0)
			end)
		end
		BodyV:Destroy(); BodyG:Destroy(); ExitButton:Destroy(); Charadd:Disconnect()
		ExitButton = nil; BodyV = nil; BodyG = nil; Charadd = nil
		Human:ChangeState(Enum.HumanoidStateType.Landed)
	end);Charadd = LocalPlayer.CharacterAdded:Connect(function()
		Camera=game.Workspace.CurrentCamera;Char=game.Players.LocalPlayer.Character
		Human=Char:WaitForChild("Humanoid");Root=Char:WaitForChild("HumanoidRootPart")
		BodyG:Destroy();BodyV:Destroy();BodyG=Instance.new("BodyGyro", Root);BodyV=Instance.new("BodyVelocity", Root)
		BodyG.MaxTorque=Vector3.new();BodyG.D=30;BodyG.P=1000;BodyG.MaxTorque=Vector3.new(400000,400000,400000);BodyV.MaxForce=Vector3.new(9e9, 9e9, 9e9)
	end)
end

--Bring
local DumpCars = function(args, isSource)
	SavedPositions.DumpCar = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	if isSource then
		if not (args.Body or args.Body:FindFirstChild("VehicleSeat")) or args.Body.VehicleSeat.Occupant then
			return
		end
		if isSource == "clientdelete" then
			args:Destroy()
			return
		end
		repeat task.wait()
			LocTP(CFrame.new(args.Body.VehicleSeat.Position))
			args.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChildOfClass("Humanoid"))
		until LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit
		local valval = States.AntiVoid; States.AntiVoid = false
		args.PrimaryPart = args:FindFirstChild("RWD")
		if isSource == "vdestroy" then
			args:SetPrimaryPartCFrame(CFrame.new(0, -150, 0))
		elseif isSource == "void" then
			args:SetPrimaryPartCFrame(CFrame.new(0, 9e9, 0))
		elseif isSource == "temp" then
			args:SetPrimaryPartCFrame(Teleports.deadend)
		end
		task.wait(0.2); States.AntiVoid = valval
		LAction("unsit", true); LocTP(SavedPositions.DumpCar)
		return
	end
	local Car = nil
	for i,v in pairs(workspace.CarContainer:GetChildren()) do
		if v:IsA("Model") and v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") and not v.Body.VehicleSeat.Occupant then
			Car = v
		end
		if Car then
			if args == "clientdelete" then
				Car:Destroy()
			else
				repeat task.wait()
					LocTP(CFrame.new(Car.Body.VehicleSeat.Position))
					Car.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChild("Humanoid"))
				until LocalPlayer.Character:FindFirstChild("Humanoid").Sit
				local tempotempo = States.AntiVoid; States.AntiVoid = false
				Car.PrimaryPart = Car:FindFirstChild("RWD")
				if args == "vdestroy" then
					Car:SetPrimaryPartCFrame(CFrame.new(0, -150, 0))
				elseif args == "void" then
					Car:SetPrimaryPartCFrame(CFrame.new(0, 9e9, 0))
				elseif args == "temp" then
					Car:SetPrimaryPartCFrame(Teleports.deadend)
				end
				task.wait(0.3); States.AntiVoid = tempotempo
				LAction("unsit", true)
			end
		end
	end; if Car then
		LocTP(SavedPositions.DumpCar)
	end; Car = nil
end

local BringCar = function(args, usedcar, policecar)
	local Car = nil; local CarButton = workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"]
	if policecar then
		CarButton = workspace.Prison_ITEMS.buttons:GetChildren()[4]["Car Spawner"]
	end; local ButtonPivot = CarButton:GetPivot()
	local LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; States.IsBringing = true
	if usedcar then
		for i,v in pairs(workspace.CarContainer:GetChildren()) do
			if v:IsA("Model") and v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") and not v.Body.VehicleSeat.Occupant then
				for ii,vv in pairs(v.Body:GetChildren()) do
					if vv:IsA("Seat") and not vv.Occupant then
						Car = v
						break
					end
				end; if Car then
					break
				end
			end
		end; if not Car then
			Notif("Cancelled", "No used car(s) found.")
			return
		end
	else
		task.spawn(function()
			Car = game:GetService("Workspace").CarContainer.ChildAdded:Wait()
		end); repeat task.wait()
			task.spawn(function()
				LAction("unsit"); LocTP(ButtonPivot); workspace.Remote.ItemHandler:InvokeServer(CarButton)
			end)
		until Car
	end; repeat task.wait() until Car:FindFirstChild("RWD") and Car:FindFirstChild("Body") and Car:FindFirstChild("Body"):FindFirstChild("VehicleSeat")
	local Stopped, timeout = false, tick()
	while not Stopped do task.wait()
		pcall(function()
			LocTP(CFrame.new(Car.Body.VehicleSeat.Position))
			Car.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChild("Humanoid"))
			Stopped = LocalPlayer.Character:FindFirstChild("Humanoid").Sit or tick() - timeout > 6
		end)
	end; Car.PrimaryPart = Car:WaitForChild("RWD")
	if args then
		local destiny = args == LocalPlayer and LastPos or args.Character:FindFirstChild("Head").CFrame
		Car:SetPrimaryPartCFrame(destiny)
		wait(.2); LAction("unsit", true); LocTP(LastPos)
	else
		Car:SetPrimaryPartCFrame(LastPos)
	end; States.IsBringing = false; Stopped = nil
	return Car
end
--I know you skidded my bring, you think i wouldnt notice?
local BringPL = function(BringFrom, Destination, isCFrame, donotusecar, dontbreakyet)
	if BringFrom.TeamColor == BrickColor.new("Medium stone grey") or not (BringFrom.Character and BringFrom.Character:FindFirstChildOfClass("Humanoid") and BringFrom.Character:FindFirstChildOfClass("Humanoid").Health ~= 0) then
		Notif("Error", "Cannot bring this player. Either dead or is in neutrals team.")
		return
	end; if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid").Sit then LAction("unsit", true); end
	local Car = nil; local CarButton = workspace.Prison_ITEMS.buttons["Car Spawner"]["Car Spawner"]; local ButtonPivot = CarButton:GetPivot()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
		if not (BringFrom == LocalPlayer) then
			repeat task.wait()
				for i,v in pairs(workspace.CarContainer:GetChildren()) do
					if v:IsA("Model") and v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") and v.Name ~= "DONOTUSECAR" and not v.Body.VehicleSeat.Occupant then
						for ii,vv in pairs(v.Body:GetChildren()) do
							if vv:IsA("Seat") and not vv.Occupant then
								Car = v
								break
							end
						end
						if Car then
							break
						end
					end
				end
				if not Car then
					coroutine.wrap(function()
						LocTP(ButtonPivot)
						workspace.Remote.ItemHandler:InvokeServer(CarButton)
					end)()
				end
			until Car
			if donotusecar then Car.Name = "DONOTUSECAR"; end
			if Car and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and BringFrom.Character and BringFrom.Character:FindFirstChild("Torso") and BringFrom.Character:FindFirstChildOfClass("Humanoid") then
				repeat task.wait() until Car:FindFirstChild("RWD") and Car:FindFirstChild("Body") and Car:FindFirstChild("Body"):FindFirstChild("VehicleSeat"); States.IsBringing = true
				local seattimeout = tick() + 8
				local LHuman, LRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"), LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				repeat task.wait()
					LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"); LRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
					if LHuman and LRoot then
						LRoot.CFrame = CFrame.new(Car.Body.VehicleSeat.Position); Car.Body.VehicleSeat:Sit(LHuman)
					end
				until LHuman.Sit or tick() - seattimeout >=0; seattimeout = nil
				if not LHuman or not LHuman.Sit then
					Notif("Error", "This seat is either bugged or ping lag!"); LAction("unsit", true)
					States.IsBringing = false; LocTP(LastPos); Car.Name = "DONOTUSECAR"
					return
				end; if BringFrom.TeamColor == BrickColor.new("Medium stone grey") then
					Notif("Error", "Player is in neutrals, bring cancelled."); LAction("unsit", true)
					States.IsBringing = false; LocTP(LastPos)
					return
				end
				local TargetSeat = nil
				for i,v in pairs(Car.Body:GetChildren()) do
					if v:IsA("Seat") and not v.Occupant then
						TargetSeat = v
						break
					end
				end; if not TargetSeat then
					Notif("Error", "The car seats are too full!"); LocTP(LastPos)
					return
				end
				local VChar = BringFrom.Character
				local VHuman = VChar and VChar:FindFirstChildOfClass("Humanoid")
				local VRoot = VChar and VChar:FindFirstChild("HumanoidRootPart")
				local Timeout = tick() + 17
				local CarSpin, SpinRad = false, 0
				task.spawn(function()
					Car.PrimaryPart = TargetSeat; Car:SetPrimaryPartCFrame(VRoot.CFrame * CFrame.new(0, -0.3, 0))
					task.wait(4); CarSpin = true
				end)
				repeat 
					task.wait()
					local step1 = CPing() / 2 / 2 / 2
					if TargetSeat.Occupant and not VHuman.Sit then
						for i,v in pairs(Car.Body:GetChildren()) do
							if v:IsA("Seat") and not v.Occupant then
								TargetSeat = v
								break
							end
						end
					end
					Car.PrimaryPart = TargetSeat
					local Movement = Vector3.new(VRoot.Velocity.X, 0, VRoot.Velocity.Z)
					local Predict = (VRoot.CFrame - (Vector3.new(0, 0, -0.1) * step1)) + (Movement * (step1 * 28))
					if Predict.Position.Y > 1 then
						if CarSpin then
							SpinRad = SpinRad + 30
							Car:SetPrimaryPartCFrame(Predict * CFrame.Angles(0, math.rad(SpinRad), 0))
						else
							Car:SetPrimaryPartCFrame(Predict)
						end
					else
						Car:SetPrimaryPartCFrame(LastPos)
					end
					if BringFrom.TeamColor == BrickColor.new("Medium stone grey") then
						break
					end
				until not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChildOfClass("Humanoid") or not BringFrom.Character or not LHuman.Sit or VChar ~= BringFrom.Character or VHuman.Sit or VHuman.Health == 0 or tick() - Timeout >=0
				Timeout = nil
				if VHuman and not VHuman.Sit then
					Notif("Error", "Failed to bring!"); LAction("unsit", true); LocTP(LastPos); States.IsBringing = false
					return
				end
				if isCFrame then
					Car.PrimaryPart = Car:FindFirstChild("RWD"); Car:SetPrimaryPartCFrame(Destination)
				else
					Car.PrimaryPart = Car:FindFirstChild("RWD")
					local Destiny = Destination ~= LocalPlayer and Destination.Character:FindFirstChild("HumanoidRootPart").CFrame or LastPos
					Car:SetPrimaryPartCFrame(Destiny)
					if Destination ~= LocalPlayer and (donotusecar or not Settings.User.AutoDumpCar) then
						wait(.2); LAction("unsit", true); LocTP(LastPos)
					end
				end; SavedArgs.BringSuccess = true
				if Settings.User.AutoDumpCar and not donotusecar and not dontbreakyet then
					local Tinedout = tick() + 15
					repeat task.wait() until VHuman.Health == 0 or not VHuman.Sit or tick() - Tinedout >=0 or not Players:FindFirstChild(BringFrom and BringFrom.Name or "nil"); Tinedout = nil
					if not LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
						LastPos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
						repeat task.wait()
							Car.Body.VehicleSeat:Sit(LocalPlayer.Character:FindFirstChildOfClass("Humanoid"))
						until LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit
					end
					Car.PrimaryPart = Car:FindFirstChild("RWD"); Car:SetPrimaryPartCFrame(CFrame.new(0, 9, 0)); wait(.2)
					LAction("unsit", true); LocTP(LastPos)
				end; States.IsBringing = false
			end
		else
			if isCFrame then
				LocTP(Destination)
			else
				LocTP(Destination.Character:FindFirstChild("HumanoidRootPart").CFrame)
			end
		end
	end
end
--Arrest/Tase
local ArrestPL = function(args, savepos, isHidden)
	SavedPositions.ArrestPlr = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	local Timedout, readytoar = tick() + 6, tick() + CPing()
	LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame)
	repeat task.wait()
		local potangina = args.Character and args.Character:FindFirstChild("Humanoid").Health == 0
		local gago = args.TeamColor == BrickColor.new("Bright blue") or args.TeamColor == BrickColor.new("Medium stone grey")
		local hayop = args.TeamColor ~= BrickColor.new("Really red") and not GetIllegalReg(args)
		if potangina or gago or hayop then
			break
		end;if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid").Sit then
			LAction("unsit")
		end;if isHidden or Settings.User.HiddenArrest then
			LocTP(args.Character:FindFirstChild("Head").CFrame * CFrame.new(0, -12, -1))
		else
			LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, -1))
		end;if tick() - readytoar >=0 then
			task.spawn(ArrestEve, args)
		end
	until args.Character:FindFirstChild("Head"):FindFirstChild("handcuffedGui") or tick() - Timedout >= 0; Timedout = nil
	if savepos then
		if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
			LAction("unsit", true)
		end;LocTP(SavedPositions.ArrestPlr)
	end
end

local TasePL = function(plr, args)
	local oldteam = nil
	if not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
		oldteam = LocalPlayer.TeamColor
		TeamTo("guard")
		task.wait()
	end
	local Taser = LocalPlayer.Backpack:FindFirstChild("Taser") or LocalPlayer.Character:FindFirstChild("Taser")
	local ShootEvents = {};
	if args == "teams" then
		for _, tea in pairs(plr:GetPlayers()) do
			if (not (tea == LocalPlayer) and not (tea.TeamColor == BrickColor.new("Bright blue"))) and CheckWhitelist(tea) and tea.Character and tea.Character:FindFirstChild("Humanoid") and not (tea.Character:FindFirstChild("Humanoid").Health == 0) then
				ShootEvents[#ShootEvents + 1] = {
					Hit = tea.Character:FindFirstChildOfClass("Part");
					Cframe = CFrame.new();
					RayObject = Ray.new(Vector3.new(), Vector3.new());
					Distance = 0;
				};
			end
		end
	elseif args == "tables" then
		for i,v in next, plr do
			if not (v == LocalPlayer) and CheckWhitelist(v) and v.Character and v.Character:FindFirstChild("Humanoid") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
				ShootEvents[#ShootEvents + 1] = {
					Hit = v.Character:FindFirstChildOfClass("Part");
					Cframe = CFrame.new();
					RayObject = Ray.new(Vector3.new(), Vector3.new());
					Distance = 0;
				};
			end
		end
	else
		if plr and plr.Character and plr.Character:FindFirstChild("Humanoid") and not (plr.Character:FindFirstChild("Humanoid").Health == 0) then
			ShootEvents[#ShootEvents + 1] = {
				Hit = plr.Character:FindFirstChildOfClass("Part");
				Cframe = CFrame.new();
				RayObject = Ray.new(Vector3.new(), Vector3.new());
				Distance = 0;
			};
		end
	end
	Rstorage.ShootEvent:FireServer(ShootEvents, Taser)
	Rstorage.ReloadEvent:FireServer(Taser)
	task.wait()
	if oldteam then
		if oldteam == BrickColor.new("Really red") then
			TeamTo("criminal")
		else
			TeamTo("inmate")
		end
	end
end

local FlingPL = function(args)
	local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	for _,v in next, LocalPlayer.Character:GetChildren() do
		if v:IsA("BasePart") then
			v.CanCollide = false
			v.Massless = true
		end
	end
	local tempo = args.Character:FindFirstChild("HumanoidRootPart").CFrame; LocTP(tempo)
	local val = Toggles.Noclip; Toggles.Noclip = true
	local tempcon = Stepped:Connect(function(step)
		step = step - game.Workspace.DistributedGameTime
		local aRoot, lRoot = args.Character and args.Character:FindFirstChild("HumanoidRootPart"), LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if aRoot and lRoot then
			tempo = aRoot.CFrame + (aRoot.Velocity * (step * 28))
			if tempo.Position.Y > 1 then
				lRoot.CFrame = tempo
			end
		end
	end); task.delay(0.35, function()
		if args.Character and args.Character:FindFirstChild("Head") and args.Character.Head.Position.Y < 699 then
			VKeyPress("C", "Press")
		end
	end); task.delay(0.05, function()
		LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 131111, 0)
	end)
	local timeout = tick() + 10
	repeat task.wait()
		local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if root then
			root.CFrame = tempo.Position.Y > 1 and tempo or CFrame.new(0, 100, 0)
			if root.Velocity.Y < 6999 then
				root.Velocity = Vector3.new(0, 1e6, 0)
			end
		end
		local human = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if human and human.Sit then
			human.Sit = false
		end
		if not Players:FindFirstChild(args.Name) then
			Notif("Fling stopped.", "Player left!")
			break
		end
	until tick() - timeout >=0 or (args.Character and args.Character:FindFirstChild("Head") and (args.Character.Head.Position.Y > 699 or args.Character.Head.Position.Y < 1))
	tempcon:Disconnect(); tempcon = nil; timeout = nil; Toggles.Noclip = val
	local tick1 = tick() + 2
	local seat = game:GetService("Workspace"):FindFirstChildWhichIsA("Seat", true)
	local LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if seat.Occupant and not LHuman.Sit then
		for i,v in next, workspace:GetDescendants() do
			if v:IsA("Seat") and not v.Occupant then
				seat = v; break
			end
		end
	end
	repeat
		LHuman = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if LHuman and seat then
			seat:Sit(LHuman)
		end
		if LocalPlayer.Character.PrimaryPart then LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0) end
		task.wait()
	until LHuman.Sit or tick() - tick1 >=0; task.wait()
	for i = 1, 9 do
		Stepped:Wait()
		LHuman.Sit = false; LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0); LocTP(tempos)
	end; Hbeat:Wait(); LHuman.Sit = false; LocTP(tempos)
	tempos = nil; tick1 = nil; LHuman = nil
end

local CarFlingPL = function(args)
	local tempos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	BringPL(args, args.Character:FindFirstChild("HumanoidRootPart").CFrame, true, true)
	local char = LocalPlayer.Character
	local bv, bg = Instance.new("BodyVelocity", char.HumanoidRootPart), Instance.new("BodyGyro", char.HumanoidRootPart)
	for i = 1, 10 do
		bv.MaxForce = Vector3.new(9e9, 9e9, 9e9); bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.CFrame = bg.CFrame * CFrame.new(math.random(69, 699999), math.random(69, 6966868), math.random(6996, 66886)); bv.Velocity = Vector3.new(math.random(69, 699), 1e6, math.random(69, 699))
		Stepped:Wait()
	end; Stepped:Wait(); Hbeat:Wait()
	Tasks.Refresh(nil, tempos)
end

local MakeCrim = function(args, savepos, tpback, ArrestLater)
	if args.TeamColor == BrickColor.new("Really red") then
		Notif("Error", "Player is already criminal!")
	else
		if args == LocalPlayer then 
			TeamTo("criminal") 
			return 
		end; SavedPositions.MakeCrimPos = savepos and LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame or nil; SavedPositions.MakeCrimPlr = args.Character:FindFirstChild("HumanoidRootPart").CFrame
		local timeout = tick() + 10
		repeat
			BringPL(args, CFrame.new(-920.947937, 92.3143158, 2138.05615, 0.997869313, 4.71007233e-08, 0.0652444065, -4.59519711e-08, 1, -1.91075955e-08, -0.0652444065, 1.6068773e-08, 0.997869313), true, nil, true)
			RTPing(0);RTPing(0)
		until args.TeamColor == BrickColor.new("Really red") or tick() - timeout >= 0; timeout = nil
		if ArrestLater then
			ArrestPL(args)
		end;if tpback then
			BringPL(args, SavedPositions.MakeCrimPlr, true); wait(.2)
		end;if savepos then
			if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
				LAction("unsit", true)
			end;LocTP(SavedPositions.MakeCrimPos)
		end
	end
end
--yes, this function is very useless
local SpamArrestPL = function(args)
	if States.AnnoyingPlayer then
		local plr = args
		local readytoarrest = nil
		task.delay(0, function()
			while States.AnnoyingPlayer and task.wait(.03) do
				if readytoarrest then
					task.spawn(ArrestEve, plr)
				end
				if not Players:FindFirstChild(plr.Name) then
					Notif("Spam-arrest broken.", "Player has left the game!"); break
				end
			end
			States.AnnoyingPlayer = nil
			plr = nil
			readytoarrest = nil
		end)
		task.spawn(function()
			while States.AnnoyingPlayer do task.wait()
				if not Players:FindFirstChild(plr.Name) then
					break
				end
				pcall(function()
					if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
						if plr.TeamColor == BrickColor.new("Really red") or (plr.TeamColor == BrickColor.new("Bright orange") and GetIllegalReg(plr)) then
							LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false
							LocTP(plr.Character.HumanoidRootPart.CFrame)
							readytoarrest = true
						elseif plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
							readytoarrest = false
							repeat task.wait() until plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and not (plr.TeamColor == BrickColor.new("Medium stone grey"))
							coroutine.wrap(function()
								MakeCrim(plr, false, false, false)
							end)()
							local timeout = tick() + 5
							local characterwasadded = nil
							task.spawn(function()
								plr.CharacterAdded:Wait()
								characterwasadded = true
							end)
							repeat task.wait()
								if not Players:FindFirstChild(plr.Name) then
									break
								end
								if plr.TeamColor == BrickColor.new("Medium stone grey") then
									LAction("unsit", true)
									repeat task.wait() until not (plr.TeamColor == BrickColor.new("Medium stone grey"))
									break
								end
								if characterwasadded then
									LAction("unsit", true)
									break
								end
								if plr.TeamColor == BrickColor.new("Really red") or (GetIllegalReg(plr) and plr.TeamColor == BrickColor.new("Bright orange")) then
									break
								end
							until tick() - timeout >=0
							timeout = nil
							characterwasadded = nil
						end
					else
						readytoarrest = false
					end
				end)
			end
		end)
	end
end

local CreateClientRay = function(RayS, CustomColor)
	for i = 1, #RayS do
		local NewRay = Instance.new("Part", workspace.CurrentCamera)
		NewRay.Name = "ClientRay"
		NewRay.Material = Enum.Material.Neon
		NewRay.Anchored = true
		NewRay.CanCollide = false
		NewRay.Transparency = 0.5
		NewRay.formFactor = Enum.FormFactor.Custom
		NewRay.Size = Vector3.new(0.2, 0.2, RayS[i].Distance)
		NewRay.CFrame = RayS[i].Cframe
		local Mesh = Instance.new("BlockMesh", NewRay)
		Mesh.Scale = Vector3.new(0.5, 0.5, 1)
		if CustomColor then
			NewRay.BrickColor = BrickColor.new(CustomColor)
		else
			NewRay.BrickColor = BrickColor.Yellow()
		end
		game:GetService("Debris"):AddItem(NewRay, 0.05)
	end
end

--Kill functions (Faster meleekill omg real)
local MeleeKill = function(args, savepos, isHidden)
	if savepos then
		SavedPositions.MeleeKill = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	end
	local LHead, VHead = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head"), args.Character and args.Character:FindFirstChild("Head")
	local VHuman, VRoot = args.Character and args.Character:FindFirstChildOfClass("Humanoid"), args.Character and args.Character:FindFirstChild("HumanoidRootPart")
	if LHead and VHead and VHuman and VHuman.Health ~= 0 then
		LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false
		if not (isHidden or Settings.User.HiddenMelee) then
			if VRoot and not Saved.MKillDebounce[args.Name] then
				local daping = CPing(); LocTP(VRoot.CFrame); Saved.MKillDebounce[args.Name] = true
				task.spawn(function()
					RTPing(daping*2); Saved.MKillDebounce[args.Name] = nil
				end); Rstep:Wait(); LocTP(VRoot.CFrame); wait()
				for i = 1, 10 do MeleEve(args); end
				wait(0.030); LocTP(VRoot.CFrame)
				for i = 1, 10 do MeleEve(args); end
				wait(0.030); LocTP(VRoot.CFrame)
				for i = 1, 10 do MeleEve(args); end
				Rstep:Wait(); LocTP(VRoot.CFrame)
				for i = 1, 10 do MeleEve(args); end
			end; wait()
		else
			local timeout = tick() + 6
			repeat task.wait()
				if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
					LAction("unsit")
				end; if args.Character and args.Character:FindFirstChildOfClass("Humanoid") and not args.Character:FindFirstChild("ForceField") then
					if args.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
						if args.Character:FindFirstChild("Humanoid").Sit then
							LocTP(VHead.CFrame * CFrame.new(0, -8, 0))
						else LocTP(VHead.CFrame * CFrame.new(0, -12, 0)); end
					else break; end
				else
					break
				end; for i = 1, 10 do
					MeleEve(args)
				end
			until tick() - timeout >=0
		end
	end; if savepos then
		LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false; LocTP(SavedPositions.MeleeKill)
	end
end
--Wow what a totally useful function
local PunchKill = function(args, speed)
	local Interval = speed or 0.3
	local lastpos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	while task.wait(Interval) do
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit then
			LAction("unsit")
		end
		if (not Players:FindFirstChild(args.Name) or not args.Character) or args.Character:FindFirstChild("Humanoid").Health == 0 or args.TeamColor == BrickColor.new("Medium stone grey") then
			break
		end
		LocTP(args.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, 1.5))
		VirtualPunch(args)
	end
	LocTP(lastpos)
end

local ShootKill = function(plr, amount, guntouse, hitpart)
	if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character.Humanoid.Health ~= 0 then
		if plr.TeamColor == LocalPlayer.TeamColor then
			if plr.TeamColor == BrickColor.new("Bright orange") then
				TeamTo("criminal")
			else
				TeamTo("inmate")
				RTPing(0.1)
			end
		end
		local DeGun = guntouse or "AK-47"
		local HasGun = LocalPlayer.Character:FindFirstChild(DeGun) or LocalPlayer.Backpack:FindFirstChild(DeGun)
		if not HasGun then
			Gun(DeGun)
			HasGun = waitfor(LocalPlayer.Backpack, DeGun, 1)
		end
		local ToHit = hitpart or plr.Character:FindFirstChildWhichIsA("BasePart")
		local Times = amount or 15
		LAction("equip", HasGun)
		for i = 1, Times do
			if not HasGun then
				break
			end
			local Start, End = HasGun:FindFirstChild("Muzzle").Position, plr.Character:FindFirstChild("HumanoidRootPart").Position
			local EA = {
				[1] = {
					Hit = ToHit;
					Cframe = CFrame.new(End, Start) * CFrame.new(0, 0, -(Start-End).Magnitude / 2);
					Distance = (Start-End).Magnitude;
					RayObject = Ray.new(Vector3.new(), Vector3.new());
				};
			};
			if DeGun == "Remington 870" then
				for i = 1, 4 do
					local tmp = End
					End = End + Vector3.new(math.random(-1, 1), math.random(-1, 2), math.random(-1, 1))
					EA[#EA+1] = {
						Hit = ToHit;
						Cframe = CFrame.new(End, Start) * CFrame.new(0, 0, -(Start-End).Magnitude / 2);
						Distance = (Start-End).Magnitude;
						RayObject = Ray.new(Vector3.new(), Vector3.new());
					};
					End = tmp
					tmp = nil
				end
			end
			CreateClientRay(EA)
			Rstorage.ShootEvent:FireServer(EA, HasGun)
			Rstorage.ReloadEvent:FireServer(HasGun)
			task.wait(.1)
			if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid").Health == 0 then
				break
			end
		end
	end
end

local KillPL = function(plr, events, guntouse, WaitToDie) 
	local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	if not AK and not guntouse then
		Gun("AK-47")
		task.wait()
		AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	elseif guntouse then
		AK = LocalPlayer.Backpack:FindFirstChild(guntouse) or LocalPlayer.Character:FindFirstChild(guntouse)
		if not AK then
			Gun(guntouse)
			task.wait()
			AK = LocalPlayer.Backpack:FindFirstChild(guntouse)
		end
	end
	if plr.Character:FindFirstChild("Humanoid").Health == 0 or plr.Character:FindFirstChildWhichIsA("ForceField") then
		return
	end
	local Eve = events or 10
	local ShootEvents = {};
	for i = 1, Eve do
		ShootEvents[#ShootEvents + 1] = {
			Hit = plr.Character:FindFirstChildOfClass("Part");
			Cframe = CFrame.new();
			RayObject = Ray.new(Vector3.new(), Vector3.new());
			Distance = 0;
		};
	end
	task.spawn(function()
		for i = 1, 6 do
			Rstorage.ReloadEvent:FireServer(AK)
			task.wait(.1)
		end
	end)
	if plr.TeamColor == LocalPlayer.TeamColor then
		if plr.TeamColor == BrickColor.new("Really red") or plr.TeamColor == BrickColor.new("Bright blue") then
			SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			SaveCamPos()
			TeamEve("Bright orange")
			Rstorage.ShootEvent:FireServer(ShootEvents, AK)
			task.wait(0.06)
		else
			TeamTo("criminal")
			Rstorage.ShootEvent:FireServer(ShootEvents, AK)
		end
	else
		Rstorage.ShootEvent:FireServer(ShootEvents, AK)
	end
	if WaitToDie then
		repeat task.wait() until not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid") or plr.Character:FindFirstChildOfClass("Humanoid").Health == 0 or plr.Character:FindFirstChildWhichIsA("ForceField")
	end
end

local TableKill = function(tables)
	local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	if not AK then
		Gun("AK-47")
		task.wait()
	end
	local inteam = nil
	local crimteam = nil
	local sameteam = nil
	local sameinmate = nil
	local sameguard = nil
	local samecrim = nil
	local ShootEvents = {};
	for i,v in next, tables do
		if v.Character and not v.Character:FindFirstChildWhichIsA("ForceField") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
			if not Saved.KillDebounce[v.Name] then
				Saved.KillDebounce[v.Name] = true
				if v.TeamColor == LocalPlayer.TeamColor then
					sameteam = true
					if LocalPlayer.TeamColor == BrickColor.new("Bright orange") then
						sameinmate = true
					elseif LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
						sameguard = true
					elseif LocalPlayer.TeamColor == BrickColor.new("Really red") then
						samecrim = true
					end
				end
				if v.TeamColor == BrickColor.new("Bright orange") then
					inteam = true
				elseif v.TeamColor == BrickColor.new("Really red") then
					crimteam = true
				end
				delay(1.2, function()
					Saved.KillDebounce[v.Name] = nil
				end)
				for i = 1, 10 do
					ShootEvents[#ShootEvents + 1] = {
						Hit = v.Character:FindFirstChildOfClass("Part");
						Cframe = CFrame.new();
						RayObject = Ray.new(Vector3.new(), Vector3.new());
						Distance = 0;
					}
				end
			end
		end
	end
	if not ShootEvents[1] then
		return
	end
	AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	task.spawn(function()
		for i = 1, 10 do
			Rstorage.ReloadEvent:FireServer(AK)
			task.wait(.1)
		end
	end)
	if sameteam then
		if ((samecrim or sameguard) and inteam) or (sameinmate and crimteam) then
			SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			SaveCamPos()
			TeamEve("Medium stone grey")
			Rstorage.ShootEvent:FireServer(ShootEvents, AK)
			task.wait(0.06)
			TeamEve("Bright orange")
		elseif (samecrim or sameguard) and not inteam then
			SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			SaveCamPos()
			TeamEve("Bright orange")
			Rstorage.ShootEvent:FireServer(ShootEvents, AK)
			task.wait(0.05)
		elseif sameinmate and not crimteam then
			TeamTo("criminal")
			Rstorage.ShootEvent:FireServer(ShootEvents, AK)
		end
	else
		Rstorage.ShootEvent:FireServer(ShootEvents, AK)
	end
end

local MultiKill = function(plrs, exclude)
	local AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	if not AK and not (LocalPlayer.TeamColor == BrickColor.new("Bright blue")) then
		Gun("AK-47")
		task.wait()
		AK = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
	elseif LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
		AK = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
	end
	local neutralkill, hasplayers = nil, nil
	local ShootEvents = {}
	for i,v in pairs(plrs:GetPlayers()) do
		if not (v == LocalPlayer or v == exclude) and CheckWhitelist(v) then
			if v.Character and not v.Character:FindFirstChildWhichIsA("ForceField") and not (v.Character:FindFirstChild("Humanoid").Health == 0) then
				hasplayers = true
				if v.TeamColor == LocalPlayer.TeamColor then
					if v.TeamColor == BrickColor.new("Bright orange") then
						TeamTo("criminal")
					elseif v.TeamColor == BrickColor.new("Really red") or v.TeamColor == BrickColor.new("Bright blue") then
						neutralkill = true
					end
				end
				for i = 1, 10 do
					ShootEvents[#ShootEvents + 1] = {
						Hit = v.Character:FindFirstChildOfClass("Part");
						Cframe = CFrame.new();
						RayObject = Ray.new(Vector3.new(), Vector3.new());
						Distance = 0;
					}
				end
			end
		end
	end
	if not hasplayers then
		return
	end
	task.spawn(function()
		for i = 1, 20 do
			Rstorage.ReloadEvent:FireServer(AK)
			task.wait(.1)
		end
	end)
	if neutralkill then
		SavedPositions.AutoRe = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
		SaveCamPos()
		TeamEve("Medium stone grey")
		Rstorage.ShootEvent:FireServer(ShootEvents, AK)
		task.wait(0.06)
		TeamEve("Bright orange")
	else
		Rstorage.ShootEvent:FireServer(ShootEvents, AK)
	end
end

local GiveKeyCard = function(player)
	if player == LocalPlayer then
		if workspace.Prison_ITEMS.single:FindFirstChild("Key card") then
			ItemHand(false, "Key card")
		else
			local oldteam, oldpos = LocalPlayer.TeamColor, LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			repeat task.wait()
				if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") then
					if #Teams.Guards:GetPlayers() > 7 then
						Notif("Error", "Guards team is full! Failed to givekeycard.")
						break
					end; TeamTo("guard")
				end; LAction("died")
				if not Toggles.AutoRespawn then
					TeamTo("guard")
				else
					LocalPlayer.CharacterAdded:Wait()
				end; wait(.1)
			until workspace.Prison_ITEMS.single:FindFirstChild("Key card"); LocTP(oldpos)
			if oldteam == BrickColor.new("Bright orange") then
				TeamTo("inmate")
			elseif oldteam == BrickColor.new("Really red") then
				TeamTo("criminal")
			end; ItemHand(false, "Key card"); ItemHand(false, "Key card"); ItemHand(false, "Key card")
		end
	else
		local finallykeycard = nil; local oldteam = LocalPlayer.TeamColor
		SavedPositions.GiveKeyCard = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
		task.spawn(function()
			while task.wait() do
				for i,v in pairs(workspace.Prison_ITEMS.single:GetChildren()) do
					if v.Name == "Key card" and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
						local vpivot = v.ITEMPICKUP.Position
						local ppivot = player.Character:FindFirstChild("HumanoidRootPart").Position
						if (vpivot-ppivot).Magnitude <= 15 then
							finallykeycard = true
							break
						end
					end
				end
				if finallykeycard then
					break
				end
			end
		end)
		repeat task.wait()
			if player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
				local temp = player.Character:FindFirstChild("HumanoidRootPart").CFrame
				SavedPositions.AutoRe = temp; LocTP(temp)
				if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") then
					if #Teams.Guards:GetPlayers() > 7 then
						Notif("Error", "Guards team full! Cannot give keycard."); finallykeycard = true
						break
					end
					TeamEve("Bright blue"); LocalPlayer.CharacterAdded:Wait()
					waitfor(LocalPlayer.Character, "HumanoidRootPart", 2).CFrame = temp; RTPing(0)
				end
				LAction("died")
				if Toggles.AutoRespawn then
					LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart", 2).CFrame = temp
				else
					TeamTo("guard")
				end; RTPing(0.09)
			else
				finallykeycard = true
				break
			end
		until finallykeycard
		SavedPositions.AutoRe = SavedPositions.GiveKeyCard; LocTP(SavedPositions.GiveKeyCard)
		if oldteam == BrickColor.new("Bright orange") then
			TeamTo("inmate")
		elseif oldteam == BrickColor.new("Really red") then
			TeamTo("criminal")
		end
	end
end

local CrashMethod = function(typeofcrash, args)
	if typeofcrash == "servercrash" then
		if #Teams.Guards:GetPlayers() < 8 then
			TeamTo("guard")
		else
			Gun("M9"); task.wait()
		end
		local SchoolShooter = {}
		local da1, da2 = LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position, workspace:FindFirstChildWhichIsA("BasePart").Position
		for i,v in pairs(Players:GetPlayers()) do
			SchoolShooter[#SchoolShooter+1] = {
				Hit = workspace:FindFirstChildWhichIsA("Part");
				Cframe = CFrame.new();
				Distance = 69999;
				RayObject = Ray.new(da1, da2);
			}
		end
		local total = 5024 - #SchoolShooter
		local gun = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
		task.spawn(function()
			for i = 1, total do
				Rstorage.ShootEvent:FireServer({}, gun)
			end
			task.delay(15, function()
				deprint("Debug_Crash events done")
				while Rstep:Wait() do
					Rstorage.ShootEvent:FireServer(SchoolShooter, gun)
				end
			end)
			while task.wait() do
				LocalPlayer.CharacterAdded:Wait(); wait(); gun = LocalPlayer.Backpack:FindFirstChild("M9")
				if not gun then
					Gun("M9"); task.wait(); gun = LocalPlayer.Backpack:FindFirstChild("M9")
				end
			end
		end)
	elseif typeofcrash == "lastresort" then
		local america = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
				america[#america+1] = {
					Hit = v.Character:FindFirstChildWhichIsA("BasePart");
					Cframe = v.Character.HumanoidRootPart.CFrame;
					Distance = math.huge;
					RayObject = Ray.new(Vector3.new(), Vector3.new())
				}
			end
		end
		task.spawn(function()
			while task.wait(.4) do
				pcall(function()
					local new = LocalPlayer.Backpack:FindFirstChild("Remington 870") or LocalPlayer.Character:FindFirstChild("Remington 870")
					if not new then
						Gun("Remington 870")
						new = LocalPlayer.Backpack:FindFirstChild("Remington 870")
					end
					for i = 1, 225 do
						Rstorage.ShootEvent:FireServer(america, new)
					end
					task.wait(1)
				end)
			end
		end)
	elseif typeofcrash == "crashkill" then
		if LocalPlayer.TeamColor == args.TeamColor then
			if args.TeamColor == BrickColor.new("Bright orange") then
				TeamTo("criminal")
			else
				TeamTo("inmate")
			end; RTPing()
		end
		repeat Stepped:Wait() until args.Character and not args.Character:FindFirstChildWhichIsA("ForceField")
		local arrrr = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
		if not arrrr then
			Gun("M9"); arrrr = LocalPlayer.Backpack:FindFirstChild("M9")
		end; local ra = {}
		for i = 1, 10 do
			ra[#ra+1] = {
				Hit = args.Character:FindFirstChildWhichIsA("BasePart");
				Cframe = args.Character:FindFirstChildWhichIsA("BasePart").CFrame;
				Distance = math.huge;
				RayObject = Ray.new(Vector3.new(), Vector3.new());
			}
		end; for i = 1, 2000 do
			Rstorage.ShootEvent:FireServer(ra, arrrr)
		end
	elseif typeofcrash == "serverlag" then
		if States.LaggingServer then
			States.LaggingServer = false; wait(.4)
		end; States.LaggingServer = true
		task.spawn(function()
			Gun("Remington 870")
			local ohio = {}
			local amount = args or 69
			for i = 1, 101 do
				ohio[#ohio+1] = {
					Hit = LocalPlayer.Character:FindFirstChildWhichIsA("BasePart");
					Cframe = CFrame.new();
					Distance = math.huge;
					RayObject = Ray.new(Vector3.new(), Vector3.new());
				};
			end
			while States.LaggingServer do task.wait()
				pcall(function() Gun("Remington 870") end)
				local guntouse = LocalPlayer.Backpack:FindFirstChild("Remington 870") or LocalPlayer.Character:FindFirstChild("Remington 870")
				if guntouse then
					for i = 1, amount do
						Rstorage.ShootEvent:FireServer(ohio, guntouse)
					end
				end
				task.wait(1.14)
			end; ohio = nil; amount = nil
		end)
	elseif typeofcrash == "serverspike" then
		Gun("Remington 870"); task.wait()
		local iranoutofideas = {}
		local strength = args or 69
		local amount = 100 + math.random(1, 15)
		for i = 1, amount do
			iranoutofideas[#iranoutofideas+1] = {
				Hit = workspace:FindFirstChildWhichIsA("Part");
				Cframe = CFrame.new();
				Distance = math.huge;
				RayObject = Ray.new(Vector3.new(), Vector3.new());
			};
		end
		local remin = LocalPlayer.Backpack:FindFirstChild("Remington 870") or LocalPlayer.Character:FindFirstChild("Remington 870")
		for i = 1, strength do
			Rstorage.ShootEvent:FireServer(iranoutofideas, remin)
		end
	elseif typeofcrash == "timeout" then
		Gun("AK-47"); task.wait()
		local thegun = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
		local mcdofriedchicken = {}
		local mc, jb = workspace:FindFirstChildWhichIsA("BasePart"), workspace:FindFirstChildOfClass("Part")
		for i = 1, 100 do
			mcdofriedchicken[#mcdofriedchicken+1] = {
				Hit = mc;
				Cframe = CFrame.new(mc.Position, jb.Position) * CFrame.new(0, 0, math.random(69, 699999));
				Distance = (mc.Position-jb.Position).Magnitude;
				RayObject = Ray.new(mc.Position, (jb.Position-mc.Position).unit * 6999999);
			};
		end
		task.spawn(function()
			while task.wait(.03) do
				pcall(function()
					if not thegun then
						Gun("AK-47")
						task.wait()
						thegun = LocalPlayer.Backpack:FindFirstChild("AK-47")
					end
					Rstorage.ShootEvent:FireServer(mcdofriedchicken, thegun)
				end)
			end
		end)
	elseif typeofcrash == "tasercrash" then
		if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") and #Teams.Guards:GetPlayers() == 8 then
			Notif("Error", "Guards team full!")
			return
		end
		local tempo = {}
		local lpos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position
		for i,v in pairs(Players:GetPlayers()) do
			if v and v.Character then
				local vpos = v.Character:FindFirstChild("HumanoidRootPart").Position
				tempo[#tempo+1] = {
					Hit = v.Character:FindFirstChildWhichIsA("BasePart");
					Cframe = CFrame.new(lpos, vpos);
					Distance = math.huge;
					RayObject = Ray.new(vpos, (lpos-vpos).unit * 69999);
				};
			end
		end
		task.spawn(function()
			while task.wait() do
				local gun = LocalPlayer.Backpack:FindFirstChild("Taser") or LocalPlayer.Character:FindFirstChild("Taser")
				if not gun then
					TeamTo("guard")
				end
				Rstorage.ShootEvent:FireServer(tempo, gun)
				task.spawn(function()
					if math.random(1, 69) == 69 then
						Rstorage.ReloadEvent:FireServer(gun)
					end
				end)
			end
		end)
	elseif typeofcrash == "timestop" then
		local thegun = LocalPlayer.Backpack:FindFirstChild("Remington 870") or LocalPlayer.Character:FindFirstChild("Remington 870")
		if not thegun then
			Gun("Remington 870")
			local aughhh = waitfor(LocalPlayer.Backpack, "Remington 870", 69); thegun = aughhh
		end
		task.spawn(function()
			while States.StoppingTime do task.wait()
				if LocalPlayer.Backpack and not (LocalPlayer.Backpack:FindFirstChild("Remington 870") or LocalPlayer.Character:FindFirstChild("Remington 870")) then
					RTPing(); pcall(function() Gun("Remington 870") end); thegun = waitfor(LocalPlayer.Backpack, "Remington 870", 69)
				end
				for i = 1, 69 do
					Rstorage.ShootEvent:FireServer({
						[1] = {}
					}, thegun)
				end; task.wait(4.5); RTPing()
			end
		end)
	elseif typeofcrash == "itemlag" then
		AllItems()
		task.wait()
		LAction("unequip")
		local inter = args or 69
		local crashing = true
		do
			local g1, g2, g3 = LocalPlayer.Backpack:FindFirstChild("M9"), LocalPlayer.Backpack:FindFirstChild("Remington 870"), LocalPlayer.Backpack:FindFirstChild("AK-47")
			local i1, i2 = LocalPlayer.Backpack:FindFirstChild("Hammer"), LocalPlayer.Backpack:FindFirstChild("Crude Knife")
			local o1, o2 = LocalPlayer.Backpack:FindFirstChild("Dinner") or LocalPlayer.Backpack:FindFirstChild("Breakfast") or LocalPlayer.Backpack:FindFirstChild("Lunch"), LocalPlayer.Backpack:FindFirstChild("M4A1")
			g1.Grip = g1.Grip * CFrame.new(0, math.random(1, 69), 0); g1.Parent = LocalPlayer.Character
			g2.Grip = g2.Grip * CFrame.new(0, math.random(1, 69), 0); g2.Parent = LocalPlayer.Character
			g3.Grip = g3.Grip * CFrame.new(0, math.random(1, 69), 0); g3.Parent = LocalPlayer.Character
			if i1 and i2 then
				i1.Grip = i1.Grip * CFrame.new(0, math.random(1, 69), 0); i1.Parent = LocalPlayer.Character
				i2.Grip = i2.Grip * CFrame.new(0, math.random(1, 69), 0); i2.Parent = LocalPlayer.Character
			end; if o2 then
				o2.Grip = o2.Grip * CFrame.new(0, math.random(1, 69), 0); o2.Parent = LocalPlayer.Character
			end; if o1 then
				o1.Grip = o1.Grip * CFrame.new(0, math.random(1, 69), 0); o1.Parent = LocalPlayer.Character
			end
		end; task.delay(inter, function()
			crashing = nil
		end)
		while crashing do
			for i,v in pairs(LocalPlayer.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Grip = v.Grip * CFrame.Angles(0, math.rad(8), 0)
					v.Parent = LocalPlayer.Backpack
					v.Parent = LocalPlayer.Character
				end
			end
			Rstep:Wait()
		end; wait(1); LAction("unequip")
	elseif typeofcrash == "forcecrash" then
		local tempe = {}
		local augh = Ray.new(Vector3.new(0, 0, 0), Vector3.new(math.huge, math.huge, math.huge))
		local lp = LocalPlayer.Character.HumanoidRootPart.CFrame
		for i = 1, 100000 do
			tempe[#tempe+1] = {
				Cframe = lp;
				Distance = 9e9;
				RayObject = augh;
			};
		end; task.wait(.03)
		for i,v in pairs(Players:GetPlayers()) do
			if v.Character then
				for _,vv in next, v.Character:GetChildren() do
					if vv:IsA("BasePart") then
						tempe[#tempe+1] = {
							Cframe = vv.CFrame;
							Distance = math.huge;
							RayObject = augh;
						};
					end
				end
			end
		end; Hbeat:Wait()
		Gun("AK-47"); Gun("M9")
		if not LocalPlayer.Character or LocalPlayer.Character.Humanoid.Health == 0 then
			Toggles.AutoRespawn = false; LocalPlayer.CharacterAdded:Wait()
			if waitfor(LocalPlayer.Character, "HumanoidRootPart", 5) then
				deprint("Debug_Forcecrash died.")
			end
			Gun("AK-47"); Gun("M9")
		end; task.wait()
		local gyat = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
		local mm = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
		Rstorage.ShootEvent:FireServer({
			[1] = {
				Cframe = CFrame.new(1,1,20000),Distance = math.huge,RayObject = augh,PLA = true,MSG = "repeat while true do end until nil"
			};[2] = {
				Cframe = CFrame.new(math.huge, math.huge, math.huge),Distance = math.huge,RayObject = augh
			};[3] = {
				Distance = math.huge,RayObject = augh
			}
		}, mm)
		if gyat then
			LAction("equip", mm); Rstorage.ShootEvent:FireServer(tempe, gyat)
			task.delay(10, function()
				if RTPing() then
					LAction("unequip")
				end; Rstorage.ReloadEvent:FireServer(gyat); Rstorage.ReloadEvent:FireServer(mm)
			end)
		else
			Notif("Error", "An error occured while force-crashing.")
		end; tempe = nil
	elseif typeofcrash == "formidicrash" then
		Notif("NOTICE!!! Connect to 5Ghz or ethernet", "Formidicrash may disconnect you because packet size is too large", 10); wait(.1)
		if not SavedArgs.LoadedCrashEvents then
			local Root = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
			Notif("Please wait...", "Loading crash events. (Client will be rate limited!)")
			SavedArgs.LoadedCrashEvents = true
			local deray = Ray.new(Vector3.new(0, 0, 0), Vector3.new(math.huge, math.huge, math.huge))
			for i = 1, 100000 do
				local lp, bp = Root.Position, workspace:FindFirstChildOfClass("Part").Position + Vector3.new(math.random(1, 69), math.random(1, 69), math.random(1, 69))
				Saved.PCEvents[#Saved.PCEvents+1] = {
					Cframe = CFrame.new(bp, lp) * CFrame.new(0, 0, -(lp-bp).Magnitude / 2);
					Distance = 9e9;
					RayObject = deray;
				};
			end
			task.wait();Hbeat:Wait()
			local ptable = {}
			for i,v in next, Players:GetPlayers() do
				if v.Character then
					for _,vv in pairs(v.Character:GetChildren()) do
						if vv:IsA("BasePart") or vv:IsA("Part") then
							ptable[#ptable+1] = vv
						end
					end
				end
			end
			repeat
				for _,v in next, ptable do
					Saved.PCEvents[#Saved.PCEvents+1] = {
						Cframe = v.CFrame;
						Distance = math.huge;
						RayObject = deray;
					};
					if Saved.PCEvents[124900] then
						break
					end
				end
			until Saved.PCEvents[124900]
			task.wait(0.05);Hbeat:Wait()
		end
		if waitfor(LocalPlayer.Character, "HumanoidRootPart", 1) then
			AllGuns(); AllGuns(); LAction("unequip"); task.wait()
			local g1, g2, g3 = LocalPlayer.Backpack:FindFirstChild("AK-47"), LocalPlayer.Backpack:FindFirstChild("M9"), LocalPlayer.Backpack:FindFirstChild("Remington 870")
			Rstorage.ShootEvent:FireServer({[1]={PLA=true,Cframe=CFrame.new(1,1,20000),MSG="while true do end"}}, g2); wait()
			Rstorage.ShootEvent:FireServer(Saved.PCEvents, g1); Rstorage.ShootEvent:FireServer(Saved.PCEvents, g2)
			Rstorage.ShootEvent:FireServer(Saved.PCEvents, g3); Rstorage.ShootEvent:FireServer(Saved.PCEvents, g3)
			Rstorage.ShootEvent:FireServer(Saved.PCEvents, g1); deprint("Debug_ShootEvent completed"); wait(15)
			Rstorage.ReloadEvent:FireServer(g1); Rstorage.ReloadEvent:FireServer(g2); Rstorage.ReloadEvent:FireServer(g3)
		else Notif("Error!", "There was a problem while crashing, please try again!"); end
	elseif typeofcrash == "eventlag" then
		local tmp = Toggles.AutoRespawn; States.Flying = false; Toggles.AutoRespawn = false
		local amount = args or 1000
		for i = 1, amount do
			task.spawn(function()
				workspace.Remote.TeamEvent:FireServer("Bright orange")
			end)
		end
		task.wait(3);task.wait(3);task.wait(3);Toggles.AutoRespawn = tmp
	elseif typeofcrash == "eventcrash" then
		Connections.CharacterAdded:Disconnect(); Connections.CharacterAdded = nil; Unloaded = true; Toggles.AutoRespawn = nil
		settings():GetService("NetworkSettings").IncomingReplicationLag = math.huge
		local rem = workspace.Remote.TeamEvent
		for i = 1, 69420 do
			coroutine.wrap(function()
				rem:FireServer("Bright orange")
			end)()
		end
		game:GetService("RunService").RenderStepped:Connect(function()
			rem:FireServer("Bright orange")
		end)
	elseif typeofcrash == "soundlag" then
		local amount = args or 6999
		local event, sound = Rstorage.SoundEvent, LocalPlayer.Character.Head.punchSound
		for i = 1, amount do
			coroutine.wrap(function()
				event:FireServer(sound)
			end)()
		end
	end
end

--Threads/Tasks
Threads = {
	ExtraSensory = function()
		if not Toggles.ESP then
			return
		end
		task.spawn(function()
			while Toggles.ESP do task.wait()
				for i,v in pairs(Players:GetPlayers()) do
					local LPos = LocalPlayer.Character and LocalPlayer.Character.PrimaryPart
					local VHead, VRoot, VHuman = v.Character and v.Character:FindFirstChild("Head"), v.Character and v.Character:FindFirstChild("HumanoidRootPart"), v.Character and v.Character:FindFirstChildOfClass("Humanoid")
					if v ~= LocalPlayer and VHead and VRoot and VHuman and LPos then
						if VHead:FindFirstChild("ESP") then
							local NameESP = VHead:FindFirstChild("ESP"):FindFirstChild("NameESP")
							VRoot:FindFirstChild("RootESP").Color3 = v.TeamColor.Color
							if v.Name == v.DisplayName then
								NameESP.Text = v.Name .. " | Health: " .. math.floor(VHuman.Health) .. " | Magnitude: " .. math.floor((LPos.Position-VRoot.Position).Magnitude)
							else
								NameESP.Text = v.Name .. " [" .. v.DisplayName .. "] | Health: " .. math.floor(VHuman.Health) .. " | Magnitude: " .. math.floor((LPos.Position-VRoot.Position).Magnitude)
							end; NameESP.TextColor3 = v.TeamColor.Color
						else
							local NameESP, Label, RootESP = Instance.new("BillboardGui"), Instance.new("TextLabel"), Instance.new("BoxHandleAdornment")
							NameESP.Adornee = v.Character.Head;NameESP.Name = "ESP";NameESP.Parent = v.Character.Head
							NameESP.Size = UDim2.new(0, 100, 0, 135);NameESP.StudsOffset = Vector3.new(0, 0, 0);NameESP.AlwaysOnTop = true
							Label.Parent = NameESP;Label.Name = "NameESP";Label.BackgroundTransparency = 1
							Label.Position = UDim2.new(0, 0, 0, -50);Label.Size = UDim2.new(0, 100, 0, 100);Label.Font = Enum.Font.SourceSansSemibold
							Label.TextSize = 18;Label.TextColor3 = v.TeamColor.Color;Label.TextStrokeTransparency = 0
							Label.TextYAlignment = Enum.TextYAlignment.Bottom;Label.Text = v.Name;Label.ZIndex = 10
							RootESP.Name = "RootESP";RootESP.Parent = VRoot;RootESP.Adornee = VRoot;RootESP.AlwaysOnTop = true
							RootESP.ZIndex = 10;RootESP.Size = VRoot.Size;RootESP.Transparency = 0.4;RootESP.Color3 = v.TeamColor.Color
						end
					end
				end; Hbeat:Wait()
			end
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= LocalPlayer and v.Character then
					local lroot, lhead = v.Character:FindFirstChild("HumanoidRootPart"), v.Character:FindFirstChild("Head")
					if lroot and lroot:FindFirstChild("RootESP") then
						lroot:FindFirstChild("RootESP"):Destroy()
					end; if lhead and lhead:FindFirstChild("ESP") then
						lhead:FindFirstChild("ESP"):Destroy()
					end
				end
			end
		end)
	end;
	ArrestBack = function()
		if not Toggles.ArrestBack then
			return
		end
		task.spawn(function()
			while Toggles.ArrestBack do task.wait()
				pcall(function()
					for i,v in pairs(Teams.Guards:GetPlayers()) do
						if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Handcuffs") then
							local vhead, lhead = v.Character:FindFirstChild("Head"), LocalPlayer.Character:FindFirstChild("Head")
							if vhead and lhead and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 then
								if (vhead.Position-lhead.Position).Magnitude <= 18 then
									MakeCrim(v, true, false, true)
								end
							end
						end
					end
				end)
			end
		end)
	end;
	AntiPay2Win = function()
		if not Toggles.AntiShield then
			return
		end
		task.spawn(function()
			while Toggles.AntiShield do task.wait()
				for _, pay2winusers in pairs(Players:GetPlayers()) do
					if pay2winusers ~= LocalPlayer and pay2winusers.Character and pay2winusers.Character:FindFirstChild("Torso") then
						local folder = pay2winusers.Character.Torso:FindFirstChild("ShieldFolder"); local shield = folder and folder:FindFirstChild("shield")
						if shield then
							shield.Size = Vector3.new(0, 0, 0)
						end
					end
				end
			end
			for _, pay2winusers in pairs(Players:GetPlayers()) do
				if pay2winusers ~= LocalPlayer and pay2winusers.Character and pay2winusers.Character:FindFirstChild("Torso") then
					local folder = pay2winusers.Character.Torso:FindFirstChild("ShieldFolder"); local shield = folder and folder:FindFirstChild("shield")
					if shield then
						shield.Size = Vector3.new(2.6, 4.2, 0.4)
					end
				end
			end
		end)
	end;
	AntiFling = function()
		if not States.AntiFling then
			return
		end
		task.spawn(function()
			local temp = PhysicalProperties.new(0.01, 0, 0)
			local tempfunc = function(arg)
				for _,vv in pairs(arg.Character:GetChildren()) do
					if vv:IsA("BasePart") or vv:IsA("Part") then
						vv.CanCollide = false
						if vv.CustomPhysicalProperties ~= temp then
							vv.CustomPhysicalProperties = temp
						end
					end; if vv:IsA("MeshPart") then
						vv.CanCollide = false
					end; if vv:IsA("Accessory") then
						local handle = vv:FindFirstChildWhichIsA("Part") or vv:FindFirstChildWhichIsA("MeshPart") or vv:FindFirstChildWhichIsA("WedgePart")
						if handle and handle.CanCollide then
							handle.CanCollide = false
						end
					end
				end
			end
			while States.AntiFling do Stepped:Wait()
				for _,v in pairs(Players:GetPlayers()) do
					if v ~= LocalPlayer and v.Character then
						tempfunc(v)
					end
				end
			end
			tempfunc = nil; temp = nil
		end)
	end;
	AntiVelocity = function()
		if not States.AntiVelocity then
			return
		end
		task.spawn(function()
			local parts, cus = {}, PhysicalProperties.new(0, 0, 0)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") or v:IsA("Part") and not v:IsDescendantOf(LocalPlayer.Character) then
					parts[#parts+1] = v
				end
				if v:IsA("MeshPart") or v:IsA("WedgePart") and not v:IsDescendantOf(LocalPlayer.Character) then
					parts[#parts+1] = v
				end
			end
			coroutine.wrap(function()
				while States.AntiVelocity do
					wait(.1)
					parts = {}
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("BasePart") or v:IsA("Part") and not v:IsDescendantOf(LocalPlayer.Character) then
							parts[#parts+1] = v
						end
						if v:IsA("MeshPart") or v:IsA("WedgePart") and not v:IsDescendantOf(LocalPlayer.Character) then
							parts[#parts+1] = v
						end
					end
					local des = workspace:FindFirstChild(LocalPlayer.Name)
					if des.PrimaryPart and des.PrimaryPart.AssemblyLinearVelocity.Magnitude > 50 then
						Stepped:Wait()
						des.PrimaryPart.Velocity = Vector3.new(0, 0, 0)
						des.PrimaryPart.RotVelocity = Vector3.new(0, 0, 0)
						LocTP(SavedPositions.AntiFling)
						deprint("Debug_Player was flinged")
					elseif des.PrimaryPart and des.PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 then
						SavedPositions.AntiFling = des.PrimaryPart.CFrame
					end
				end
				parts = nil; cus = nil
			end)()
			while States.AntiVelocity do
				Stepped:Wait()
				if next(parts) then
					for _,v in next, parts do
						if v:IsA("BasePart") or v:IsA("Part") then
							v.Velocity = Vector3.new(0, 0, 0)
							v.RotVelocity = Vector3.new(0, 0, 0)
							v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
							v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
							v.CustomPhysicalProperties = cus
						end
						if v:IsA("MeshPart") or v:IsA("WedgePart") then
							v.CanCollide = false
							v.Velocity = Vector3.new(0, 0, 0)
							v.RotVelocity = Vector3.new(0, 0, 0)
							v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
							v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
						end
					end
				end
			end
		end)
	end;
	ForceField = function()
		if not States.ForceField then
			return
		end
		task.spawn(function()
			while States.ForceField do task.wait()
				local plc = LocalPlayer.Character
				if plc then
					plc = LocalPlayer.Character
					local plr = plc and plc:FindFirstChild("HumanoidRootPart")
					if plr then
						task.delay(CPing(nil,true),function()SavedPositions.AutoRe = plr.CFrame;SaveCamPos() end)
						if #Teams.Guards:GetPlayers() > 7 then
							TeamEve("Bright orange")
						end; TeamEve("Bright blue")
						task.spawn(function()
							local isholding = plc:FindFirstChildWhichIsA("Tool") and plc:FindFirstChildWhichIsA("Tool").Name
							LocalPlayer.CharacterAdded:Wait()
							if States.ForceField then
								if not Toggles.AutoRespawn then
									waitfor(LocalPlayer.Character, "HumanoidRootPart", 1).CFrame = SavedPositions.AutoRe
								end; LoadCamPos()
								if isholding and wait() then
									local hastool = LocalPlayer.Backpack:FindFirstChild(isholding)
									if hastool then
										LAction("equip", hastool)
									else
										ItemHand(false, isholding); ItemHand(false, isholding); ItemHand(false, isholding)
										local toequip = LocalPlayer.Backpack:FindFirstChild(isholding)
										if toequip then
											LAction("equip", toequip)
										end
									end
								end
							end
						end)
						local o = CPing() / 2; task.wait(5 - o)
					end
				end
			end
		end)
	end;
	ArrestAura = function()
		if not Toggles.ArrestAura then
			return
		end
		task.spawn(function()
			while Toggles.ArrestAura do task.wait()
				for i,v in pairs(Players:GetPlayers()) do
					if v.Character and v ~= LocalPlayer and v.TeamColor.Name ~= "Bright blue" then
						local VHead, LHead = v.Character:FindFirstChild("Head"), LocalPlayer.Character:FindFirstChild("Head")
						if VHead and LHead and CheckWhitelist(v) then
							if (VHead.Position-LHead.Position).Magnitude <= 25 then
								if v.TeamColor == BrickColor.new("Really red") or GetIllegalReg(v) then
									task.spawn(ArrestEve, v); wait()
								end
							end
						end
					end
				end
			end
		end)
	end;
	ClickTeleport = function()
		if not States.ClickTeleport then
			return
		end
		task.spawn(function()
			while States.ClickTeleport do task.wait()
				if States.ClickTeleport then
					SpawnClientStuff("clicktp")
				else break end; LocalPlayer.CharacterAdded:Wait(); wait(.1); if LocalPlayer.TeamColor == BrickColor.new("Bright blue") then task.wait(1) end
			end
		end)
	end;
	Fullbright = function()
		if not States.Fullbright then
			return
		end
		task.spawn(function() pcall(function() LocalPlayer.PlayerGui.Home.fadeFrame.Visible = false end)
			local Lighting = game:GetService("Lighting"); local temp = {
				Brightness = Lighting.Brightness,FogEnd = Lighting.FogEnd,GlobalShadows = Lighting.GlobalShadows,OutdoorAmbient = Lighting.OutdoorAmbient
			};while States.Fullbright do task.wait()
				Lighting.Brightness = 5;Lighting.FogEnd = 100000;Lighting.GlobalShadows = false;Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
			end;Lighting.Brightness = temp.Brightness;Lighting.FogEnd = temp.FogEnd;Lighting.GlobalShadows = temp.GlobalShadows;Lighting.OutdoorAmbient = temp.OutdoorAmbient
		end)
	end;
	Invisibility = function()
		if not States.Invisible then
			return
		end
		task.spawn(function()
			AllGuns()
			local Character, FakeCharacter = LocalPlayer.Character, nil
			while States.Invisible do task.wait()
				local root = waitfor(LocalPlayer.Character, "HumanoidRootPart", 5)
				if root and States.Invisible then
					local lastpos = root.CFrame
					Character.Archivable = true
					FakeCharacter = Character:Clone()
					FakeCharacter.Parent = game.Lighting
					FakeCharacter.Name = "FakeCharacter"; FakeCharacter:FindFirstChildOfClass("Humanoid").DisplayName = "[INVISIBLE]"
					SaveCamPos()
					root.CFrame = CFrame.new(9e9, 9e9, 9e9)
					SavedPositions.AutoRe = lastpos; wait(.4)
					game:GetService("Workspace").CurrentCamera.CameraType = Enum.CameraType.Scriptable
					Hbeat:Wait(); Rstep:Wait()
					game:GetService("Workspace").CurrentCamera.CameraType = Enum.CameraType.Custom
					FakeCharacter = FakeCharacter
					Character.Parent = game.Lighting
					FakeCharacter.Parent = game:GetService("Workspace")
					FakeCharacter:FindFirstChild("HumanoidRootPart").CFrame = lastpos
					LocalPlayer.Character = FakeCharacter; Rstep:Wait()
					workspace.CurrentCamera.CameraSubject = FakeCharacter:FindFirstChildOfClass("Humanoid")
					workspace.CurrentCamera.CameraType = "Custom"; LoadCamPos()
					LocalPlayer.Character.Animate.Disabled = true
					LocalPlayer.Character.Animate.Disabled = false
					LocalPlayer.CharacterAdded:Wait(); waitfor(LocalPlayer.Character, "HumanoidRootPart")
					Character:Destroy(); Character = nil
					FakeCharacter:Destroy(); FakeCharacter = nil
					root = nil; lastpos = nil
					AllGuns(); AllGuns(); AllGuns()
					if States.Invisible then
						Character = LocalPlayer.Character
					else
						break
					end
				end
			end; Character = nil; FakeCharacter = nil
		end)
	end;
	ShootKillPlayers = function()
		if Saved.Thread.ShootKillPlayers then
			return
		end; Saved.Thread.ShootKillPlayers = true
		task.spawn(function()
			while task.wait() do
				if next(Loops.ShootKill) then
					pcall(function()
						for i,v in next, Loops.ShootKill do
							if v and v.Character and v.Character:FindFirstChildOfClass("Humanoid") and v.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
								local tool = LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
								if tool and tool:FindFirstChildOfClass("ModuleScript") and tool.Name ~= "Taser" then
									ShootKill(v, nil, tool.Name)
								else
									ShootKill(v)
								end
							end
						end
					end)
				else
					break
				end
			end; Saved.Thread.ShootKillPlayers = nil
		end)
	end;
	RandomKillPlayers = function()
		if Saved.Thread.RandomKillPlayers then
			return
		end; Saved.Thread.RandomKillPlayers = true
		task.spawn(function()
			while wait(1) do
				if next(Loops.RandomKill) then
					pcall(function()
						for i,v in next, Loops.RandomKill do
							if v and v.Character and v ~= LocalPlayer then
								local meth = math.random(1, 15)
								if meth == 6 then
									KillPL(v); task.wait(.35)
								end
							end
						end
					end)
				else
					break
				end
			end; Saved.Thread.RandomKillPlayers = nil
		end)
	end;
	LoopTasePlayers = function()
		if Saved.Thread.LoopTasePlayers then
			return
		end; Saved.Thread.LoopTasePlayers = true
		task.spawn(function()
			while wait(.7) do
				pcall(function()
					if Loops.TaseTeams.All then
						if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") and #Teams.Guards:GetPlayers() < 8 then
							TeamTo("guard")
						end; if LocalPlayer.TeamColor.Name == "Bright blue" then 
							TasePL(Players, "teams") 
						end
					else
						local temp = {}
						if Loops.TaseTeams.Inmates then
							for i,v in pairs(Teams.Inmates:GetPlayers()) do
								if v.Character and CheckWhitelist(v) and v ~= LocalPlayer and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
									temp[#temp+1] = v
								end
							end
						end; if Loops.TaseTeams.Criminals then
							for i,v in pairs(Teams.Criminals:GetPlayers()) do
								if v.Character and CheckWhitelist(v) and v ~= LocalPlayer and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
									temp[#temp+1] = v
								end
							end
						end; if next(Loops.Tase) then
							for i,v in next, Loops.Tase do
								if v.Character and v ~= LocalPlayer and not (v.Character:FindFirstChild("Humanoid").Health == 0 or v.TeamColor == BrickColor.new("Bright blue")) then
									temp[#temp+1] = v
								end
							end
						end; if next(Powers.Taseauras) then
							for i,v in next, Powers.Taseauras do
								if v.Character and v.Character:FindFirstChild("Head") then
									for _,vv in pairs(Players:GetPlayers()) do
										if vv.Character and vv.Character:FindFirstChild("Head") and CheckWhitelist(vv) and not (vv == LocalPlayer or vv == v) then
											local THead, VHead = v.Character.Head, vv.Character.Head
											if THead and VHead and CheckWhitelist(vv) and not (vv.Character:FindFirstChildOfClass("Humanoid").Health == 0 or vv.TeamColor == BrickColor.new("Bright blue")) then
												if (THead.Position-VHead.Position).Magnitude <= 17 then
													temp[#temp+1] = vv
												end
											end
										end
									end
								end
							end
						end; if next(temp) then
							if LocalPlayer.TeamColor ~= BrickColor.new("Bright blue") and #Teams.Guards:GetPlayers() < 8 then
								TeamTo("guard")
							end; if LocalPlayer.TeamColor.Name == "Bright blue" then 
								TasePL(temp, "tables")
							end
						end; temp = nil
					end
				end)
			end
		end)
	end;
	DeathNukes = function()
		if Saved.Thread.DeathNukes then
			return
		end; Saved.Thread.DeathNukes = true
		task.spawn(function()
			while task.wait() do
				if next(Powers.DeathNuke) then
					for i,v in next, Powers.DeathNuke do
						if v.Character and v.Character:FindFirstChildOfClass("Humanoid") then
							if v.Character:FindFirstChildOfClass("Humanoid").Health == 0 and next(Powers.DeathNuke) then
								Chat("WARNING!!! " .. v.DisplayName .. " HAS LAUNCHED THE DEATHNUKE, EVERYONE WILL DIE IN T MINUS 3 SECOND(S)!!!");wait(1.69)
								Chat("T MINUS 2 SECOND(S)");wait(1.69)
								Chat("T MINUS 1 SECOND(S)");wait(1.69)
								Chat("**NUKE ULTRA HD SOUND EFFECT**")
								pcall(function() MultiKill(Players, v) end)
								RTPing(0.1); wait(5)
							end
						end
					end
				else break end
			end; Saved.Thread.DeathNukes = nil
		end)
	end;
	AutoGuns = function()
		if not Toggles.AutoGuns then
			return
		end; Toggles.AutoItems = false
		task.spawn(function()
			while Toggles.AutoGuns do task.wait()
				pcall(AllGuns)
				if Settings.User.OldItemMethod then
					LocalPlayer.CharacterAdded:Wait(); wait(1)
				end
			end
		end)
	end;
	AutoItems = function()
		if not Toggles.AutoItems then
			return
		end; Toggles.AutoGuns = false
		task.spawn(function()
			while Toggles.AutoItems do task.wait()
				task.spawn(AllItems)
				LocalPlayer.CharacterAdded:Wait()
				if waitfor(LocalPlayer.Character, "HumanoidRootPart", 1) and Settings.User.OldItemMethod and LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
					RTPing(1)
				end
			end
		end)
	end;
	HideTeamGui = function()
		task.spawn(function()
			task.delay(0.05, function()
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
			end); for i = 1, 10 do
				pcall(function()
					LocalPlayer.PlayerGui:FindFirstChild("Home"):FindFirstChild("intro").Visible = false; LocalPlayer.PlayerGui:FindFirstChild("Home"):FindFirstChild("hud").Visible = true
					game:GetService("Workspace").CurrentCamera.FieldOfView = 70; game:GetService("Workspace").CurrentCamera.CameraType = Enum.CameraType.Custom
					game:GetService("Workspace").CurrentCamera.CameraSubject = LocalPlayer.Character:FindFirstChild("Humanoid")
				end); task.wait()
			end
		end)
	end;
};
Tasks = {
	AutoKill = function(args)
		if args == "hostile" then
			if not States.KillHostile then
				States.KillHostile = true
				task.spawn(function()
					while States.KillHostile do task.wait()
						pcall(function()
							local hostiles = {}
							for i,v in pairs(Players:GetPlayers()) do
								if v.Character and CheckWhitelist(v) and v ~= LocalPlayer then
									if v.Character:FindFirstChildOfClass("Humanoid") and v.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
										local itemholding = v.Character:FindFirstChildWhichIsA("Tool")
										if itemholding then
											local ch = v.Character
											if ch:FindFirstChild("AK-47") or ch:FindFirstChild("Remington 870") or ch:FindFirstChild("M9") or ch:FindFirstChild("M4A1") or ch:FindFirstChild("Crude Knife") or ch:FindFirstChild("Hammer") then
												hostiles[#hostiles+1] = v
											end
										else
											local track = v.Character:FindFirstChildOfClass("Humanoid")
											for _, hostileanim in ipairs(track:GetPlayingAnimationTracks()) do
												if table.find(Saved.HostileAnimations, hostileanim.Animation.AnimationId) then
													hostiles[#hostiles+1] = v
													break
												end
											end; track = nil
										end; itemholding = nil
									end
								end
							end
							if next(hostiles) then
								TableKill(hostiles); task.wait(.3)
							end; hostiles = nil
						end)
					end
				end)
			else
				Notif("Error", "Already killing hostiles.")
			end
		elseif args == "shielduser" then
			if not States.KillShielduser then
				States.KillShielduser = true
				task.spawn(function()
					while States.KillShielduser do task.wait()
						pcall(function()
							for i,v in pairs(Players:GetPlayers()) do
								if v.Character and v ~= LocalPlayer then
									if v.Character:FindFirstChild("Torso") and CheckWhitelist(v) then
										if v.Character.Torso:FindFirstChild("ShieldFolder") then
											KillPL(v, nil, nil, true)
										end
									end
								end
							end
						end)
					end
				end)
			else
				Notif("Error", "Already killing shieldusers.")
			end
		elseif args == "handcuffer" then
			if not States.KillHandcuffer then
				States.KillHandcuffer = true
				task.spawn(function()
					while States.KillHandcuffer do task.wait()
						pcall(function()
							local annoyingbrats = {}
							for i,v in pairs(Players:GetPlayers()) do
								if v.Character and v ~= LocalPlayer then
									if v.Character:FindFirstChild("Handcuffs") and CheckWhitelist(v) then
										annoyingbrats[#annoyingbrats+1] = v
									end
								end
							end
							if next(annoyingbrats) then
								TableKill(annoyingbrats); task.wait(.07)
							end; annoyingbrats = nil
						end)
					end
				end)
			else
				Notif("Error", "Already killing handcuff users")
			end
		elseif args == "taser" then
			if not States.KillTaser then
				States.KillTaser = true
				task.spawn(function()
					while States.KillTaser do task.wait()
						pcall(function()
							for i,v in pairs(Players:GetPlayers()) do
								if v ~= LocalPlayer and CheckWhitelist(v) and v.Character and v.Character:FindFirstChild("Taser") then
									KillPL(v)
								end
							end; RTPing()
						end)
					end
				end)
			else
				Notif("Error", "Already killing tasers.")
			end
		end
	end;
	AntiCheat = function()
		if States.AntiCheat then
			task.spawn(function()
				local laspos, lasteam = {}, {}
				local CheaterDetected, died = {}, {}
				local SavedChar, wasneutral = {}, {}
				local dcolor = Color3.fromRGB(255, 255, 255)
				coroutine.wrap(function()
					while States.AntiCheat do 
						task.wait()
						pcall(function()
							for _,v in next, Players:GetPlayers() do
								if v and v.Character and v ~= LocalPlayer then
									local char = v.Character
									local head = char and char:FindFirstChild("Head")
									local human = char and char:FindFirstChildOfClass("Humanoid")
									if head and human and not human.Sit then
										local haynako = head.Position
										local gago = Vector3.new(0, -0.04, 0)
										local hayop = RaycastParams.new()
										hayop.FilterType = Enum.RaycastFilterType.Exclude
										hayop.FilterDescendantsInstances = {char, workspace.CarContainer}
										local tangina = workspace:Raycast(haynako, gago, hayop)
										if tangina then
											local part = tangina.Instance
											if part and part.CanCollide and not part:IsDescendantOf(workspace.Terrain) and not (part:IsDescendantOf(workspace.CarContainer) or Players:FindFirstChild(part.Name) or Players:FindFirstChild(part.Parent.Name)) then
												if human.Health ~= 0 and human:GetState() ~= Enum.HumanoidStateType.Jumping and not human.Sit and not CheaterDetected[v.Name] then
													CheaterDetected[v.Name] = v
													SysMessage("[Cheat Detection]: Noclip detected (69% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
												end
											end 
										end
									end
								end
							end
						end)
						Hbeat:Wait()
					end
				end)()
				while States.AntiCheat do
					task.wait()
					pcall(function()
						for i,v in next, Players:GetPlayers() do
							if v and v.Character and v ~= LocalPlayer and v.TeamColor ~= BrickColor.new("Medium stone grey") and not wasneutral[v.Name] then
								local vhead = v.Character:FindFirstChild("Head")
								local root = v.Character:FindFirstChild("HumanoidRootPart")
								local human = v.Character:FindFirstChildOfClass("Humanoid")
								if lasteam[v.Name] then
									if lasteam[v.Name] ~= v.TeamColor then
										if v.TeamColor == BrickColor.new("Really red") and not GetIllegalReg(v) then
											if not CheaterDetected[v.Name] then
												CheaterDetected[v.Name] = v
												SysMessage("[Cheat Detection]: Criminal team change (Kill all) Detected! (99.69% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
											end
										end
										lasteam[v.Name] = v.TeamColor
									end
								end
								if human and human:GetState() == Enum.HumanoidStateType.PlatformStanding then
									if not CheaterDetected[v.Name] then
										CheaterDetected[v.Name] = v
										SysMessage("[Cheat Detection]: Fly detected! (PlatformStanding) (100% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
									end
								end
								if human and human:GetState() == Enum.HumanoidStateType.Swimming then
									if not CheaterDetected[v.Name] then
										CheaterDetected[v.Name] = v
										SysMessage("[Cheat Detection]: Fly detected! (FakeSwim) (100% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
									end
								end
								if human then
									if human.Health == 0 then
										died[v.Name] = true
										laspos[v.Name] = root.CFrame
									end
								end
								if root and laspos[v.Name] and SavedChar[v.Name] == v.Character and not died[v.Name] then
									if (root.Position-laspos[v.Name].Position).Magnitude > 30 and not (root.AssemblyLinearVelocity.X > 15 or root.AssemblyLinearVelocity.Z > 15) and not human.Sit and not v.Character:FindFirstChildWhichIsA("ForceField") then
										local ray = Ray.new(root.Position, (root.Position + Vector3.new(0, -5, 0) - root.Position).Unit * 5)
										local part = workspace:FindPartOnRayWithIgnoreList(ray, {v.Character, workspace.Terrain})
										if human:GetState() ~= Enum.HumanoidStateType.Jumping and part and not part:IsDescendantOf(workspace.CarContainer) then
											if not human.Sit and not v.Character:FindFirstChildWhichIsA("ForceField") and not CheaterDetected[v.Name] then
												CheaterDetected[v.Name] = v
												SysMessage("[Cheat Detection]: Teleport detected! (42.69% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
											end
										end
									end
								end
								if root and laspos[v.Name] and not died[v.Name] then
									if root.AssemblyLinearVelocity.X > 50 or root.AssemblyLinearVelocity.Z > 50 and root.AssemblyLinearVelocity.Y > -16 and not (root.AssemblyLinearVelocity.X > 1e7 or root.AssemblyLinearVelocity.Z > 1e7 or root.AssemblyLinearVelocity.Y > 1) and not human.Sit then
										local ray = Ray.new(root.Position, (root.Position + Vector3.new(0, -5, 0) - root.Position).Unit * 5)
										local part = workspace:FindPartOnRayWithIgnoreList(ray, {v.Character, workspace.Terrain})
										if human:GetState() ~= Enum.HumanoidStateType.Jumping and part and not part:IsDescendantOf(workspace.CarContainer) then
											if not human.Sit and not CheaterDetected[v.Name] then
												CheaterDetected[v.Name] = v
												SysMessage("[Cheat Detection]: Speed detected! (50% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
											end
										end
									end
								end
								if root then
									if root.AssemblyLinearVelocity.X > 1e7 or root.AssemblyLinearVelocity.Z > 1e7 or root.AssemblyLinearVelocity.Y > 1e7 or root.AssemblyAngularVelocity.X > 699 or root.AssemblyAngularVelocity.Y > 699 or root.AssemblyAngularVelocity.Z > 699 then
										if not CheaterDetected[v.Name] then
											CheaterDetected[v.Name] = v
											SysMessage("[Cheat Detection]: Fling detected! (Cannot determine culprit and victim) (69% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
										end
									end
								end
								if vhead then
									if vhead.Position.Y > 1000 or vhead.Position.X > 49999 then
										if not (root.AssemblyLinearVelocity.X > 50 or root.AssemblyLinearVelocity.Y > 50 or root.AssemblyLinearVelocity.Z > 50) and not CheaterDetected[v.Name] then
											CheaterDetected[v.Name] = v
											SysMessage("[Cheat Detection]: Invisible detected! (99.99% accurate) Player: " .. v.Name .. " [" .. v.DisplayName .. "]", dcolor)
										end
									end
								end
								if laspos[v.Name] and SavedChar[v.Name] and SavedChar[v.Name] ~= v.Character then
									SavedChar[v.Name] = nil
									SavedChar[v.Name] = v.Character
								end
								if died[v.Name] and laspos[v.Name] then
									if human.Health ~= 0 and v.Character:FindFirstChildWhichIsA("ForceField") then
										died[v.Name] = nil
										laspos[v.Name] = root.CFrame
									end
								end
								if root then
									laspos[v.Name] = v.Character:FindFirstChild("HumanoidRootPart").CFrame
								end
								if not lasteam[v.Name] then
									lasteam[v.Name] = v.TeamColor
								end
								if not SavedChar[v.Name] then
									SavedChar[v.Name] = v.Character
								end
							end
							if v.TeamColor == BrickColor.new("Medium stone grey") then
								laspos[v.Name] = nil
								lasteam[v.Name] = nil
								SavedChar[v.Name] = nil
								wasneutral[v.Name] = true
							elseif wasneutral[v.Name] then
								if v.Character and not v.Character:FindFirstChildWhichIsA("ForceField") then
									wasneutral[v.Name] = nil
								end
							end
						end
					end)
					Hbeat:Wait(); task.wait(0.08)
				end
				laspos = nil; lasteam = nil; died = nil; wasneutral = nil; SavedChar = nil; CheaterDetected = nil; dcolor = nil
			end)
		end
	end;
	LaunchNuke = function(target, radius, countdown)
		if SavedArgs.NukeCooldown then
			Notif("Error", "A nuke is already launching!")
			return
		end
		local coords = target.Character:FindFirstChild("HumanoidRootPart").CFrame; SavedArgs.NukeCooldown = true
		pcall(function()
			local rad, ticking = radius or 269, countdown or 3; local tempopo = LocalPlayer.Character
			Chat("!!!! WARNING: A NUKE IS LAUNCHING NEAR " .. target.Name .. " WITHIN A " .. tostring(math.floor(rad)) .. " METER RADIUS IN APPROXIMATELY " .. tostring(ticking) .. " SECOND(S) !!!!"); wait(ticking); Chat("!!! TACTICAL NUKE INCOMING !!!")
			local lrot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart"); local lastpos = lrot.CFrame; lrot.CFrame = CFrame.new(coords.Position + Vector3.new(0, 269, 0))
			local torpedo = Instance.new("BodyAngularVelocity", lrot)
			torpedo.Name = "Spinner"; torpedo.MaxTorque = Vector3.new(0, math.huge, 0); torpedo.P = math.huge
			local falling = Instance.new("BodyPosition", lrot)
			falling.Name = "Nuker"; falling.D = 0; falling.MaxForce = Vector3.new(math.huge, math.huge, math.huge); falling.P = 9999; falling.Position = lrot.CFrame.Position
			torpedo.AngularVelocity = Vector3.new(0, 69, 0); wait(0.8)
			repeat wait()
				falling.Position = lrot.Position + Vector3.new(0, -3, 0); lrot.CFrame = lrot.CFrame * CFrame.new(0, -3, 0)
			until LocalPlayer.Character ~= tempopo or (lrot.Position-coords.Position).Magnitude < 8 or (Vector3.new(0, coords.Position.Y, 0)-Vector3.new(0, lrot.Position.Y, 0)).Magnitude < 8
			falling:Destroy(); falling = nil; torpedo:Destroy(); torpedo = nil; tempopo = nil; Stepped:Wait(); LocalPlayer.Character.PrimaryPart.Velocity = Vector3.new(0, 0, 0)
			local AboutToDie, MakeRay = {}, {}
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= LocalPlayer and v.Character and CheckWhitelist(v) then
					local par = v.Character:FindFirstChild("HumanoidRootPart")
					if par and (par.Position-coords.Position).Magnitude < rad then
						AboutToDie[#AboutToDie+1] = v
					end
				end
			end; Gun("AK-47")
			coroutine.wrap(TableKill)(AboutToDie)
			for i,v in next, AboutToDie do
				if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
					MakeRay[#MakeRay+1] = {Hit = v.Character.HumanoidRootPart,Cframe = v.Character.HumanoidRootPart.CFrame,Distance = math.huge,RayObject = Ray.new(Vector3.new(), Vector3.new())}
				end
			end
			local gun = LocalPlayer.Backpack:FindFirstChild("AK-47") or LocalPlayer.Character:FindFirstChild("AK-47")
			Rstorage.ShootEvent:FireServer(MakeRay, gun); Hbeat:Wait(); Rstorage.ShootEvent:FireServer(MakeRay, gun); Rstorage.ReloadEvent:FireServer(gun); CreateClientRay(MakeRay); Hbeat:Wait(); CreateClientRay(MakeRay)
			RTPing(0.5); LocTP(lastpos)
		end); SavedArgs.NukeCooldown = false
	end;
	ReloadGun = function(arg, arg2)
		if not arg then
			return
		end
		task.spawn(function()
			local tool = arg.Name
			while wait() do
				local findchild = LocalPlayer.Character:FindFirstChild(tool) or LocalPlayer.Backpack:FindFirstChild(tool)
				if findchild then
					if LocalPlayer.Character:FindFirstChild(tool) then
						Rstorage.ReloadEvent:FireServer(findchild)
					elseif arg2 then break end
				else break end
			end
		end)
	end;
	SoundSpam = function()
		task.spawn(function()
			while States.SoundSpam do task.wait()
				local sounds = {}
				for ii,vv in next, workspace:GetDescendants() do
					if vv:IsA("Sound") then
						sounds[#sounds+1] = vv
					end
				end; task.wait()
				pcall(function()
					for i,v in pairs(Players:GetPlayers()) do
						if v.Character and v.Character:FindFirstChild("Head") then
							local vhead = v.Character:FindFirstChild("Head")
							for ii,vv in ipairs(sounds) do
								Rstorage.SoundEvent:FireServer(vv, vhead); vv:Play()
							end
						end; wait(CPing()+0.15)
					end; sounds = nil
				end)
				task.wait(.1); RTPing()
			end
		end)
	end;
	LoopSounds = function()
		task.spawn(function()
			while States.LoopSounds do task.wait()
				pcall(function()
					for i,v in pairs(Players:GetPlayers()) do
						if v and v.Character then
							local head = v.Character.Head
							local punch = head.punchSound; punch.Volume = math.huge
							Rstorage.SoundEvent:FireServer(punch)
							local ring = workspace["Prison_guardspawn"].spawn.Sound
							Rstorage.SoundEvent:FireServer(ring, head)
							ring:Play(); punch:Play()
						end
					end
				end); task.wait(.08)
			end
		end)
	end;
	SpinnyTools = function()
		task.spawn(function()
			local save = {}
			while States.SpinnyTools do task.wait()
				pcall(function()
					for i,v in next, LocalPlayer.Character:GetChildren() do
						if v:IsA("Tool") then
							if not save[v] then
								save[v] = true
								v.Grip = CFrame.new(Saved.SpinToolRadius, 0, 0)
							end
							v.Parent = LocalPlayer.Backpack
							v.Grip = v.Grip * CFrame.Angles(0, math.rad(Saved.SpinToolSpeed), 0)
							v.Parent = LocalPlayer.Character
						end
					end
				end); task.wait(.1)
			end; LAction("unequip")
			for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
				if v:IsA("Tool") then
					v.Grip = CFrame.new(0, 0, 0)
				end
			end; save = nil; Saved.Thread.SpinnyTools = nil
		end)
	end;
	AutoInfiniteAmmo = function()
		task.spawn(function()
			while Toggles.AutoInfiniteAmmo do task.wait()
				if LocalPlayer.Character then
					for i,v in next, LocalPlayer.Character:GetChildren() do
						if v:IsA("Tool") and v:FindFirstChild("GunStates") then
							Rstorage.ReloadEvent:FireServer(v)
						end
					end; wait()
				end
			end; Saved.Thread.AutoInfiniteAmmo = nil
		end)
	end;
	OhioMode = function()
		task.spawn(function()
			while States.OhioMode do task.wait()
				for i,v in pairs(Players:GetPlayers()) do
					if v.Character and v.Character:FindFirstChildOfClass("Humanoid") then
						if v.Character.Humanoid.Health == 0 then
							Chat("!!! (" .. v.DisplayName .. ") HAS DIED! EVERYONE WILL DIE IN 0.5 SECOND(s)")
							task.wait(.5)
							task.spawn(MultiKill, Players, v); RTPing()
							wait(10)
						end
					end
				end
			end
		end)
	end;
	PartyRave = function()
		task.spawn(function()
			while States.PartyRave and task.wait() do
				pcall(function()
					Gun("M9")
					local gun = LocalPlayer.Backpack:FindFirstChild("M9") or LocalPlayer.Character:FindFirstChild("M9")
					for i,v in pairs(Players:GetPlayers()) do
						if v.Character and v.Character:FindFirstChild("Head") then
							local crabrave={[1]={Cframe=v.Character.Head.CFrame,Distance=2048,RayObject=Ray.new()}}
							Rstorage.ShootEvent:FireServer(crabrave,gun);Rstorage.ReloadEvent:FireServer(gun);CreateClientRay(crabrave)
						end;wait()
					end;wait()
				end)
			end
		end)
	end;
	OpenSesame = function()
		task.spawn(function()
			local doors = {}
			for i,v in pairs(workspace.Doors:GetChildren()) do
				if v:IsA("Model") then
					doors[#doors+1] = v
				end
			end; while States.MagicDoor do wait()
				for i,v in pairs(Players:GetPlayers()) do
					if v.Character and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
						for _,vv in next, doors do
							local pivot, vpos = vv:GetPivot().Position, v.Character.HumanoidRootPart.Position
							if (pivot-vpos).Magnitude < 8 then
								if LocalPlayer.TeamColor.Name ~= "Bright blue" then
									if #Teams.Guards:GetPlayers() < 8 then
										TeamTo("guard")
										waitfor(LocalPlayer.Character, "HumanoidRootPart", 1)
									end
								end
								local laspiv, oldcol = vv:GetPivot(), {}
								vv:PivotTo(LocalPlayer.Character:GetPivot())
								for _,vvv in pairs(vv:GetDescendants()) do
									if vvv:IsA("BasePart") and vvv.CanCollide then
										vvv.CanCollide = false; oldcol[vvv] = true
									end
								end; Hbeat:Wait()
								vv:PivotTo(laspiv)
								for _,vvv in pairs(vv:GetDescendants()) do
									if vvv:IsA("BasePart") and oldcol[vvv] then
										vvv.CanCollide = true
									end
								end
								wait(); oldcol = nil
							end
						end
					end
				end
			end; doors = nil
		end)
	end;
	Refresh = function(RefreshAs, Position)
		if RefreshAs then
			LocalPlayer.TeamColor = BrickColor.new(RefreshAs)
		end
		local tmp = Position or LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; SavedPositions.AutoRe = tmp; SaveCamPos()
		if LocalPlayer.TeamColor == BrickColor.new("Bright blue") then
			if #Teams.Guards:GetPlayers() > 7 then
				TeamEve("Bright orange")
			end; TeamEve("Bright blue")
		elseif LocalPlayer.TeamColor == BrickColor.new("Bright orange") then
			TeamEve("Bright orange")
		elseif LocalPlayer.TeamColor == BrickColor.new("Really red") then
			TeamEve("Bright orange")
			task.spawn(function()
				workspace['Criminals Spawn'].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame; LocalPlayer.CharacterAdded:Wait()
				repeat Stepped:Wait()
					pcall(function()
						workspace["Criminals Spawn"].SpawnLocation.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
					end)
				until LocalPlayer.TeamColor == BrickColor.new("Really red"); workspace['Criminals Spawn'].SpawnLocation.CFrame = SavedPositions.Crimpad
			end)
		else
			TeamEve("Medium stone grey")
		end; LocalPlayer.CharacterAdded:Wait()
		if waitfor(LocalPlayer.Character, "HumanoidRootPart", 5) then
			LocTP(tmp)
		end; LoadCamPos()
	end;
	Respawn = function(bcolor)
		SavedPositions.AutoRe = nil
		if bcolor == BrickColor.new("Bright orange") then
			TeamEve("Bright orange")
		elseif bcolor == BrickColor.new("Bright blue") then
			TeamEve("Bright orange")
			TeamEve("Bright blue")
		elseif bcolor == BrickColor.new("Really red") then
			task.spawn(TeamEve, "Bright orange")
			TeamEve("Bright blue")
			repeat Stepped:Wait()
				pcall(function()
					LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = workspace["Criminals Spawn"].SpawnLocation.CFrame
				end)
			until LocalPlayer.TeamColor == BrickColor.new("Really red")
		else
			TeamEve("Medium stone grey")
		end
	end;
	CopyChat = function()
		task.spawn(function()
			local tempcon,tempcons = nil,{}
			for _,v in pairs(Players:GetPlayers()) do
				if v and v ~= LocalPlayer then
					tempcons[#tempcons+1] = v.Chatted:Connect(function(arg)
						Chat("[" .. v.DisplayName .. "]: " .. tostring(arg))
					end)
				end
			end;tempcon = Players.PlayerAdded:Connect(function(plr)
				tempcons[#tempcons+1] = plr.Chatted:Connect(function(arg)
					Chat("[" .. plr.DisplayName .. "]: " .. tostring(arg))
				end)
			end)
			repeat wait() until not States.CopyCat;tempcon:Disconnect()
			for _,v in pairs(tempcons) do
				v:Disconnect();v=nil
			end;tempcon=nil;tempcons=nil
		end)
	end;
};